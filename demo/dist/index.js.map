{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../node_modules/ol/extent/Relationship.js","webpack:///../node_modules/ol/extent.js","webpack:///../node_modules/ol/util.js","webpack:///../node_modules/ol/proj/epsg3857.js","webpack:///../node_modules/ol/proj/Projection.js","webpack:///../node_modules/ol/proj/epsg4326.js","webpack:///../node_modules/ol/proj/transforms.js","webpack:///../node_modules/ol/proj/projections.js","webpack:///../node_modules/ol/proj.js","webpack:///../node_modules/ol/obj.js","webpack:///../node_modules/ol/asserts.js","webpack:///../node_modules/ol/math.js","webpack:///../node_modules/ol/events/EventType.js","webpack:///../node_modules/ol/transform.js","webpack:///../node_modules/ol/events.js","webpack:///../node_modules/ol/array.js","webpack:///../node_modules/ol/geom/GeometryType.js","webpack:///../node_modules/ol/Object.js","webpack:///../node_modules/ol/geom/GeometryLayout.js","webpack:///../node_modules/ol/events/Event.js","webpack:///../node_modules/ol/proj/Units.js","webpack:///../node_modules/ol/functions.js","webpack:///../node_modules/ol/Disposable.js","webpack:///../node_modules/ol/events/Target.js","webpack:///../node_modules/ol/extent/Corner.js","webpack:///../node_modules/ol/geom/flat/deflate.js","webpack:///../node_modules/ol/geom/flat/transform.js","webpack:///../node_modules/ol/geom/Geometry.js","webpack:///../node_modules/ol/geom/SimpleGeometry.js","webpack:///../node_modules/ol/sphere.js","webpack:///../node_modules/ol/AssertionError.js","webpack:///../node_modules/ol/ObjectEventType.js","webpack:///../node_modules/ol/Observable.js","webpack:///../node_modules/ol/geom/Point.js","webpack:///./node_modules/rbush/rbush.js","webpack:///../node_modules/ol/Feature.js","webpack:///../dist/index.js","webpack:///../node_modules/rbush/rbush.js","webpack:///../node_modules/pixelworks/lib/index.js","webpack:///../node_modules/pixelworks/lib/processor.js","webpack:///../node_modules/pixelworks/lib/util.js","webpack:///./node_modules/elm-pep/dist/elm-pep.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Feature.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/MapBrowserPointerEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/TileState.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/render.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/interaction.js","webpack:///./node_modules/ol/style/Image.js","webpack:///./node_modules/ol/style/RegularShape.js","webpack:///./node_modules/ol/style/Circle.js","webpack:///./node_modules/ol/style/Fill.js","webpack:///./node_modules/ol/style/Stroke.js","webpack:///./node_modules/ol/style/Style.js","webpack:///./node_modules/ol/layer/BaseVector.js","webpack:///./node_modules/ol/render/canvas/Instruction.js","webpack:///./node_modules/ol/render/canvas/Builder.js","webpack:///./node_modules/ol/render/canvas/ImageBuilder.js","webpack:///./node_modules/ol/render/canvas/LineStringBuilder.js","webpack:///./node_modules/ol/render/canvas/PolygonBuilder.js","webpack:///./node_modules/ol/geom/flat/straightchunk.js","webpack:///./node_modules/ol/style/TextPlacement.js","webpack:///./node_modules/ol/render/canvas/TextBuilder.js","webpack:///./node_modules/ol/render/canvas/BuilderGroup.js","webpack:///./node_modules/ol/geom/flat/length.js","webpack:///./node_modules/ol/geom/flat/textpath.js","webpack:///./node_modules/ol/render/canvas/Executor.js","webpack:///./node_modules/ol/render/canvas/ExecutorGroup.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/style/IconAnchorUnits.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/style/IconImage.js","webpack:///./node_modules/ol/style/IconOrigin.js","webpack:///./node_modules/ol/style/Icon.js","webpack:///./node_modules/ol/renderer/canvas/VectorLayer.js","webpack:///./node_modules/ol/render/canvas/hitdetect.js","webpack:///./node_modules/ol/layer/Vector.js","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/TileRange.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/format/FormatType.js","webpack:///./node_modules/ol/featureloader.js","webpack:///./node_modules/ol/loadingstrategy.js","webpack:///./node_modules/ol/source/Source.js","webpack:///./node_modules/ol/source/VectorEventType.js","webpack:///./node_modules/ol/structs/RBush.js","webpack:///./node_modules/ol/source/Vector.js","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./node_modules/ol/source/OSM.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./src/index.js","webpack:///../node_modules/ol/tilecoord.js","webpack:///../node_modules/ol/tileurlfunction.js","webpack:///../node_modules/ol/net.js","webpack:///../node_modules/ol/source/State.js","webpack:///../node_modules/ol/TileState.js","webpack:///../node_modules/ol/easing.js","webpack:///../node_modules/ol/Tile.js","webpack:///../node_modules/ol/has.js","webpack:///../node_modules/ol/dom.js","webpack:///../node_modules/ol/ImageBase.js","webpack:///../node_modules/ol/ImageState.js","webpack:///../node_modules/ol/Image.js","webpack:///../node_modules/ol/ImageTile.js","webpack:///../node_modules/ol/structs/LRUCache.js","webpack:///../node_modules/ol/TileCache.js","webpack:///../node_modules/ol/reproj.js","webpack:///../node_modules/ol/reproj/Triangulation.js","webpack:///../node_modules/ol/reproj/Tile.js","webpack:///../node_modules/ol/reproj/common.js","webpack:///../node_modules/ol/size.js","webpack:///../node_modules/ol/source/Source.js","webpack:///../node_modules/ol/TileRange.js","webpack:///../node_modules/ol/tilegrid/TileGrid.js","webpack:///../node_modules/ol/tilegrid/common.js","webpack:///../node_modules/ol/tilegrid.js","webpack:///../node_modules/ol/source/Tile.js","webpack:///../node_modules/ol/source/TileEventType.js","webpack:///../node_modules/ol/source/UrlTile.js","webpack:///../node_modules/ol/source/TileImage.js","webpack:///../node_modules/ol/source/BingMaps.js","webpack:///../node_modules/ol/source/XYZ.js","webpack:///../node_modules/ol/source/CartoDB.js","webpack:///../node_modules/ol/string.js","webpack:///../node_modules/ol/CollectionEventType.js","webpack:///../node_modules/ol/Collection.js","webpack:///../node_modules/ol/format/FormatType.js","webpack:///../node_modules/ol/featureloader.js","webpack:///../node_modules/ol/loadingstrategy.js","webpack:///../node_modules/ol/source/VectorEventType.js","webpack:///../node_modules/ol/structs/RBush.js","webpack:///../node_modules/ol/source/Vector.js","webpack:///../node_modules/ol/source/Cluster.js","webpack:///../node_modules/ol/coordinate.js","webpack:///../node_modules/ol/source/Zoomify.js","webpack:///../node_modules/ol/format/IIIFInfo.js","webpack:///../node_modules/ol/source/IIIF.js","webpack:///../node_modules/ol/reproj/Image.js","webpack:///../node_modules/ol/source/Image.js","webpack:///../node_modules/ol/uri.js","webpack:///../node_modules/ol/source/ImageArcGISRest.js","webpack:///../node_modules/ol/ImageCanvas.js","webpack:///../node_modules/ol/source/ImageCanvas.js","webpack:///../node_modules/ol/source/ImageMapGuide.js","webpack:///../node_modules/ol/source/ImageStatic.js","webpack:///../node_modules/ol/source/WMSServerType.js","webpack:///../node_modules/ol/source/ImageWMS.js","webpack:///../node_modules/ol/source/common.js","webpack:///../node_modules/ol/source/OSM.js","webpack:///../node_modules/ol/structs/PriorityQueue.js","webpack:///../node_modules/ol/TileQueue.js","webpack:///../node_modules/ol/layer/Property.js","webpack:///../node_modules/ol/layer/Base.js","webpack:///../node_modules/ol/render/EventType.js","webpack:///../node_modules/ol/layer/Layer.js","webpack:///../node_modules/ol/layer/BaseImage.js","webpack:///../node_modules/ol/ViewHint.js","webpack:///../node_modules/ol/render/Event.js","webpack:///../node_modules/ol/css.js","webpack:///../node_modules/ol/render/canvas.js","webpack:///../node_modules/ol/renderer/Layer.js","webpack:///../node_modules/ol/renderer/canvas/Layer.js","webpack:///../node_modules/ol/renderer/canvas/ImageLayer.js","webpack:///../node_modules/ol/layer/Image.js","webpack:///../node_modules/ol/layer/TileProperty.js","webpack:///../node_modules/ol/layer/BaseTile.js","webpack:///../node_modules/ol/renderer/canvas/TileLayer.js","webpack:///../node_modules/ol/layer/Tile.js","webpack:///../node_modules/ol/source/Raster.js","webpack:///../node_modules/ol/source/Stamen.js","webpack:///../node_modules/ol/source/TileArcGISRest.js","webpack:///../node_modules/ol/source/TileDebug.js","webpack:///../node_modules/ol/source/TileJSON.js","webpack:///../node_modules/ol/source/TileWMS.js","webpack:///../node_modules/ol/source/UTFGrid.js","webpack:///../node_modules/ol/VectorRenderTile.js","webpack:///../node_modules/ol/VectorTile.js","webpack:///../node_modules/ol/source/VectorTile.js","webpack:///../node_modules/ol/source/WMTSRequestEncoding.js","webpack:///../node_modules/ol/tilegrid/WMTS.js","webpack:///../node_modules/ol/source/WMTS.js","webpack:///../node_modules/ol/geom/flat/area.js","webpack:///../node_modules/ol/geom/flat/closest.js","webpack:///../node_modules/ol/geom/flat/inflate.js","webpack:///../node_modules/ol/geom/flat/simplify.js","webpack:///../node_modules/ol/geom/LinearRing.js","webpack:///../node_modules/ol/geom/flat/contains.js","webpack:///../node_modules/ol/geom/flat/interiorpoint.js","webpack:///../node_modules/ol/geom/flat/intersectsextent.js","webpack:///../node_modules/ol/geom/flat/segments.js","webpack:///../node_modules/ol/geom/flat/reverse.js","webpack:///../node_modules/ol/geom/flat/orient.js","webpack:///../node_modules/ol/geom/Polygon.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","boundingExtent","coordinates","extent","createEmpty","ii","length","extendCoordinate","buffer","opt_extent","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","equals","extend","extendXY","Math","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","opt_stops","width","height","push","xs","ys","apply","_boundingExtentXYs","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","extendStatics","Projection","options","this","code_","code","units_","extent_","undefined","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","__extends","b","setPrototypeOf","__proto__","Array","__","constructor","HALF_SIZE","PI","EXTENT","WORLD_EXTENT","_super","EPSG3857Projection","units","Units","METERS","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","slice","halfSize","log","tan","toEPSG4326","atan","exp","METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","DEGREES","transforms","add","source","destination","sourceCode","destinationCode","cache","cloneTransform","identityTransform","addProjection","projection","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","getTransform","transformExtent","projections2","forwardTransform","inverseTransform","userProjection","fromUserExtent","destProjection","assign","target","var_sources","TypeError","arguments","clear","getValues","values","assert","assertion","errorCode","clamp","cosh","squaredSegmentDistance","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","abs","absValue","tmp","j","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","a","lerp","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","compose","dx1","dy1","sx","sy","angle","dx2","dy2","makeInverse","det","e","f","toString","join","listen","type","listener","opt_this","opt_once","originalListener_1","removeEventListener","eventsKey","addEventListener","listenOnce","unlistenByKey","numberSafeCompareFunction","includes","arr","indexOf","linearFindNearest","direction","data","extension","isArray","find","arr1","arr2","len1","findIndex","index","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","ObjectEvent","oldValue","_this","BaseObject","opt_values","values_","setProperties","getKeys","keys","getProperties","notify","eventType","getChangeEventType","dispatchEvent","PROPERTYCHANGE","set","opt_silent","unset","changeEventTypeCache","XY","XYZ","XYM","XYZM","BaseEvent","propagationStopped","preventDefault","stopPropagation","FEET","PIXELS","TILE_PIXELS","USFEET","TRUE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","Disposable","disposed_","dispose","disposeInternal","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","event","evt","Event","propagate","handleEvent","pendingRemovals","getListeners","hasListener","opt_type","splice","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","ends","jj","transform2D","opt_dest","dest","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","simplifyTransformed","getRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","changed","anchorX","anchorY","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","distance","bearing","lon1","dByR","lat","asin","lon","AssertionError","message","split","Observable","revision_","on","len","once","un","Point","quickselect","left","right","quickselectStep","z","sd","newLeft","floor","newRight","swap","defaultCompare","RBush","maxEntries","_maxEntries","_minEntries","ceil","findItem","item","items","equalsFn","calcBBox","node","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","multiSelect","stack","pop","mid","all","_all","search","bbox","result","nodesToSearch","childBBox","collides","load","insert","_build","_splitRoot","tmpNode","_insert","remove","parent","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","pow","N2","N1","right2","right3","_chooseSubtree","level","minArea","minEnlargement","targetNode","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","minOverlap","bbox1","bbox2","overlap","_allDistMargin","sort","leftBBox","rightBBox","margin","i$1","child$1","siblings","factory","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","createStyleFunction","setId","id","styles_1","getZIndex","__importDefault","mod","asserts_1","GeometryType_1","EventType_1","source_1","Feature_1","Polygon_1","Honeycomb","attributions","wrapX","_radius","features","geometryFunction","feature","default","boundRefresh_","refresh","setSource","opt_fast","vlaue","configurable","getRadius","setRadius","getSource","loadFeatures","cluster","addFeatures","createHoneycomb","halfR","rowH","halfW","colW","minx","miny","getFeatures","clusterDict","Map","ptX","ptY","mayRow","pxPy","mayCol","disputeBottom","curLeft","trangle","containsPoint","_a","col","row","has","fe","createHoneycombByColRow","curClusterFeatures","featureInfo","curFeature","points","pt","product","nextPoint","vectorA","vectorB","top2","polygon","Vector","Processor","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Uint8ClampedArray","arrays","pixels","array","pixel","createWorker","config","onMessage","lines","lib","map","concat","blob","Blob","URL","createObjectURL","worker","Worker","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","_enqueue","_dispatch","destroy","_destroyed","job","shift","segmentLength","slices","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","primaryTouchId","mouseCaptureTarget","addMouseToPointerListener","mouseType","pointerType","mouseEvent","pointerEvent","MouseEvent","pointerId","isPrimary","tiltX","tiltY","buttons","pressure","defaultPrevented","addTouchToPointerListener","touchType","touchEvent","changedTouches","nbTouches","CustomEvent","bubbles","cancelable","ctrlKey","shiftKey","altKey","metaKey","touch","clientX","clientY","screenX","screenY","pageX","pageY","rect","getBoundingClientRect","offsetX","offsetY","top","identifier","button","movementX","movementY","region","relatedTarget","window","Element","setPointerCapture","setCapture","releasePointerCapture","releaseCapture","reverseSubArray","begin","FALSE","EventType","ObjectEventType","Property","CollectionEvent","opt_element","opt_index","element","Collection","opt_array","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","insertAt","elem","CollectionEventType","removeAt","prev","setAt","opt_except","MapEvent","opt_frameState","frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel_","coordinate_","dragging","getEventPixel","getCoordinateFromPixel","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","error","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","newEvent","MapBrowserEventType","clearTimeout","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","hifi","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","createExtent","onlyCenter","smooth","opt_isMoving","viewWidth","viewHeight","ratio","none","extendCoordinates","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","disable","coordinate1","coordinate2","cosAngle","sinAngle","projectionExtent","worldWidth","worldsAway","easeIn","easeOut","inAndOut","linear","createProjection","defaultCode","fromLonLat","opt_projection","getUserProjection","toUserCoordinate","fromUserCoordinate","toUserExtent","twiceArea","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance_1","snap","round","quantize","quantizeArray","simplifiedEnds","LinearRing","maxDelta_","maxDeltaRevision_","GeometryType","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","isNaN","intersectsLineString","coordinatesExtent","ret","point1","point2","intersectsLinearRingArray","intersectsLinearRing","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","fromExtent","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","w","h","setViewportSize","opt_size","ViewProperty","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","nearest","baseLevel","fit","geometryOrExtent","fitInternal","padding","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","getConstrainedCenter","centerOn","position","centerOnInternal","centerX","centerY","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","Base","BaseLayer","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","opt_managed","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","pos","ownLayerState","layerState","toSize","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","MapProperty","view","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","renderer_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","createRenderer","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","hitTolerance","layerFilter","checkWrapped","forEachFeatureAtCoordinate","getFeaturesAtPixel","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","getEventCoordinateInternal","viewportPosition","eventPosition","getTarget","getTargetElement","getView","pixelToCoordinateTransform","getOverlayById","getLoading","layerStatesArray","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","coordinateToPixelTransform","getRenderer","getSize","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","viewState","mapBrowserEvent","body","getRootNode","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","redrawText","layerStates","hasRenderer","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","declutterItems","layerIndex","usedTiles","renderFrame","MapEventType","setLayerGroup","setSize","setView","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","parseInt","Control","target_","listenerKeys","render_","getMap","mapEvent","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","inView","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","handleSourceChange_","layerRenderer","prepareFrame","some","arrayLayerState","updateElement_","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","getAttributionsCollapsible","setCollapsible","display","lastChild","removeChildren","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","rotation_","autoHide_","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","zoomByDelta","Interaction","setActive","active","stopEvent","delta_","DoubleClickZoom","altShiftKeysOnly","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","defaultCondition","primaryAction","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","conditionInternal_","pass","hasAttribute","centroid","centerpx","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","out_","mapExtent","boxPixelExtent","DragZoom","out","keyCode","KeyCode","mapUnitsDelta","pixelDelta_","pan","KeyboardPan","defaultCondition_","pixelDelta","charCode","charCodeAt","KeyboardZoom","Mode","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","RenderEvent","opt_inversePixelTransform","opt_context","inversePixelTransform","HEX_COLOR_RE_","NAMED_COLOR_RE_","fromNamed","color","rgb","cacheSize","fromString","g","exec","hasAlpha","substr","normalize","Number","fromStringInternal_","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","asString","shared","asColorLike","VectorContext","drawCustom","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","opt_declutterGroups","defaultLineDash","defaultPadding","checkedFonts","console","warn","measureFont","div","heights","measureContext","textHeights","registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","rotateAtOffset","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","executeLabelInstructions","drawImage","restore","createTransformStringCanvas","CanvasImmediateRenderer","viewRotation","opt_squaredTolerance","opt_userTransform","context_","transform_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","GEOMETRY_RENDERERS","builderGroup","getImageState","ImageState","imageReplay","getBuilder","BuilderType","addDeclutter","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","getGeometries","renderFeatureInternal","expireIconCache","MapRenderer","declutterTree_","calculateMatrices2D","thisArg","thisArg2","translatedCoordinate","offsets","declutteredFeatures","numLayers","entry","tmpCoord","getWrapX","callback_1","declutterTree","zIndexItems","renderDeclutter","renderDeclutterItems","scheduleExpireIconCache","Composite","CompositeMapRenderer","fontChangeListenerKey_","CLASS_UNSELECTABLE","container","insertBefore","firstChild","children_","previousElement","oldChildren","childNodes","oldChild","newChild","replaceChildren","getDataAtPixel","zoomOptions","rotateOptions","attribution","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","displacement_","displacement","getDisplacement","getHitDetectionImage","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","RegularShape","canvas_","hitDetectionCanvas_","fill_","origin_","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","Circle","CircleStyle","Fill","color_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","image","zIndex_","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","beginPathInstruction","closePathInstruction","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","declutterGroups_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroups","hitDetectionImage","origin","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","placement","TextPlacement","flatOffset","flatEnd","oo","range","declutterGroup","drawChars_","geometryWidths","interiorPoints","saveTextStates_","backgroundFill","backgroundStroke","pixelRatio_1","strokeKey","textKey","fillKey","baseline","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","group","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","Constructor","lineStringLength","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","angleChanged","char","charLength","charM","segmentPos","interpolate","p3","p4","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","widths_","createLabel","align","numLines","widths","currentWidth","measureTextWidths","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p1","p2","strokeInstruction","setStrokeStyle_","replayImageOrLabel_","imageOrLabel","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","origin_1","repeatSize","groupCount","box","declutterData","currentAlpha","drawLabelWithPointPlacement_","execute_","featureCallback","opt_hitExtent","transform1","transform2","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotationFromTransform","batchSize","labelWithAnchor","widthIndex","declutterGroupIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ORDER","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","contextSize","hitExtent","clearRect","mask","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","getImageData","i_1","j_1","result_1","executor","zs","opt_builderTypes","opt_declutterReplays","builderTypes","0","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","err","Uint8Array","ImageBase","getPixelRatio","listenImage","loadHandler","errorHandler","img","promise","listening_1","then","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","IconImage","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","imgData","putImageData","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","makeScale","canvasTransform","vectorSource","clipped","layerExtent","declutterReplays","world","transform_1","transform_2","viewHints_1","zz","executorData","currentExecutor","replayDeclutter","Promise","resolve","reject","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","canvas_1","imgContext","byGeometryType","replace","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","layer_1","features_1","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","gutter","loadExtent","userTransform","dirty","userExtent","getFeaturesInExtent","replayGroupInstructions","executorGroup","getOverlaps","VectorLayer","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","setState","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","tileAlpha","alphaChanged","endTransition","postRenderFunction","expireCache","opt_tileCallback","getTileCoordCenter","useTile","TileLayer","withCredentials","url","format","success","failure","xhr","XMLHttpRequest","open","FormatType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","adaptAttributions","attributionLike","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","setAttributions","opt_maxEntries","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","opt_feature","VectorSource","loader_","format_","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","Tile","interimTile","transition_","transitionStarts_","release","refreshInterimChain","getTileCoord","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","opt_tileCoord","getKeyZXY","TileCache","pruneExceptNewestZ","fromKey","enlargeClipPoint","centroidX","centroidY","dX","dY","sourceExtent","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","p0","Triangulation","targetProj","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","calculateSourceResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","getTileSize","leftToLoad_1","sourceListenKey_1","unlistenSources_","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","tmpTileCoord","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","opt_maxResolution","half","TileSource","opaque_","opaque","tilePixelRatio_","canUseScreen","screen","availWidth","availHeight","minCacheSize","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","thisProj","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","expandUrl","defaultTileLoadFunction","imageTile","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","xyzOptions","gridOptions","createXYZ","OSM","Text","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","random","honeycombSource","styleCache","colors","honeycombs","fillColor","raster","hash","jsonp","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","augmentedMatrix","targetQuadExtent","num","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","epsg4326Extent","extent_1","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","JSON","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","parse","tilesUrl","cdn_url","https","layergroupid","compareVersions","s1","s2","n1","n2","Cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","TierSizeCalculation","CustomTile","zoomifyImage_","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","tileWidth","tileCoordZ","tileIndex","localContext_1","ZoomifyTileClass","testTileUrl","Versions","IIIF_PROFILE_VALUES","supports","formats","qualities","COMPLIANCE_VERSION1","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","versionFunctions","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","imageInfo","scale_factors","tile_width","tile_height","additionalProfile","profile","profileSupports","profileFormats","profileQualities","scaleFactors","extraFormats","preferredFormat","preferredFormats","reduce","acc","extraFeatures","extraQualities","IIIFInfo","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","version","test","getComplianceLevelFromProfile","complianceLevel","getTileSourceOptions","opt_preferredOptions","imageOptions","quality","formatPercentage","percentage","toLocaleString","maximumFractionDigits","IIIF","baseUrl","lastIndexOf","tileHeight","supportsListedSizes","supportsListedTiles","isInteger","supportsArbitraryTiling","LN2","maxScaleFactor","ignoredSizesIndex","IiifTileClass","regionParam","sizeParam","tileX","tileY","regionX","regionY","regionW","regionH","sizeW","sizeH","regionWidth","regionHeight","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","appendParams","uri","params","keyParams","encodeURIComponent","qs","ImageArcGISRest","params_","ratio_","getParams","imageResolution","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvas","opt_loader","error_","getError","handleLoad_","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","Static","imageExtent_","imageExtent","getImageExtent","targetWidth","GETFEATUREINFO_IMAGE_SIZE","ImageWMS","v13_","updateV13_","serverType_","getFeatureInfoUrl","projectionObj","sourceProjectionObj","getLegendUrl","LAYERS","mpu","viewExtent","requestWidth","requestHeight","requestExtent","WMSServerType","ATTRIBUTION","BaseImage","BaseImageLayer","createTransformString","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imagePixelRatio","size_1","dw","dh","previousAlpha","ImageLayer","RasterEventType","RasterOperationType","RasterSourceEvent","RasterSource","worker_","operationType_","operationType","threads_","layers_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttribution","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","Raster","ATTRIBUTIONS","LayerConfig","ProviderConfig","Stamen","provider","providerConfig","layerConfig","tileExtent","tmpExtent_","TileArcGISRest","getKeyForParams_","LabeledTile","strokeRect","TileDebug","textTileCoord","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent_1","TileWMS","transparent","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","canvasPool","VectorRenderTile","getSourceTiles","executorGroups","loadingSourceTiles","errorSourceTileKeys","hitDetectionImageData","replayState_","sourceTiles","wantedResolution","sourceZ","hasContext","getReplayState","renderedRenderOrder","renderedTileResolution","renderedTileRevision","renderedZ","renderedTileZ","VectorTile","features_","onLoad","setFeatures","onError","defaultLoadFunction","loadingTiles_","sourceTileCache","tileGrids_","sourceTile","tileFeatures","candidate","loadedZ","previousSourceTiles","sourceTileCoord","listenChange","sourceTileKey","errorTileCount","coordKey","empty","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","WMTS","requestEncoding","WMTSRequestEncoding","version_","dimensions_","dimensions","matrixSet_","matrixSet","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","deflate","circular","opt_n","opt_sphereRadius","sphere","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","makeRegular","startAngle"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 48);\n","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return Math.abs(extent1[0] - extent2[0]) < tolerance && Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance && Math.abs(extent1[3] - extent2[3]) < tolerance;\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + width * i / opt_stops, extent[1], extent[2], extent[1] + height * i / opt_stops, extent[2] - width * i / opt_stops, extent[3], extent[0], extent[3] - height * i / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0], extent[1],\n            extent[2], extent[1],\n            extent[2], extent[3],\n            extent[0], extent[3]\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() && (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = (worldsAway * worldWidth);\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.3.1';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\nimport { add as addProj, clear as clearProj, get as getProj } from './proj/projections.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        getProj(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = [];\n            this.listeners_[type] = listeners;\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\nimport { memoizeOne } from '../functions.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n      * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {import(\"./events.js\").ListenerFunction} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = global || self, global.RBush = factory());\n}(this, function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) { swap(arr, left, right); }\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) { i++; }\n            while (compare(arr[j], t) > 0) { j--; }\n        }\n\n        if (compare(arr[left], t) === 0) { swap(arr, left, j); }\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) { left = j + 1; }\n        if (k <= j) { right = j - 1; }\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nvar RBush = function RBush(maxEntries) {\n    if ( maxEntries === void 0 ) maxEntries = 9;\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n    this.clear();\n};\n\nRBush.prototype.all = function all () {\n    return this._all(this.data, []);\n};\n\nRBush.prototype.search = function search (bbox) {\n    var node = this.data;\n    var result = [];\n\n    if (!intersects(bbox, node)) { return result; }\n\n    var toBBox = this.toBBox;\n    var nodesToSearch = [];\n\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf) { result.push(child); }\n                else if (contains(bbox, childBBox)) { this._all(child, result); }\n                else { nodesToSearch.push(child); }\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return result;\n};\n\nRBush.prototype.collides = function collides (bbox) {\n    var node = this.data;\n\n    if (!intersects(bbox, node)) { return false; }\n\n    var nodesToSearch = [];\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? this.toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf || contains(bbox, childBBox)) { return true; }\n                nodesToSearch.push(child);\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return false;\n};\n\nRBush.prototype.load = function load (data) {\n    if (!(data && data.length)) { return this; }\n\n    if (data.length < this._minEntries) {\n        for (var i = 0; i < data.length; i++) {\n            this.insert(data[i]);\n        }\n        return this;\n    }\n\n    // recursively build the tree with the given data from scratch using OMT algorithm\n    var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n    if (!this.data.children.length) {\n        // save as is if tree is empty\n        this.data = node;\n\n    } else if (this.data.height === node.height) {\n        // split root if trees have the same height\n        this._splitRoot(this.data, node);\n\n    } else {\n        if (this.data.height < node.height) {\n            // swap trees if inserted one is bigger\n            var tmpNode = this.data;\n            this.data = node;\n            node = tmpNode;\n        }\n\n        // insert the small tree into the large tree at appropriate level\n        this._insert(node, this.data.height - node.height - 1, true);\n    }\n\n    return this;\n};\n\nRBush.prototype.insert = function insert (item) {\n    if (item) { this._insert(item, this.data.height - 1); }\n    return this;\n};\n\nRBush.prototype.clear = function clear () {\n    this.data = createNode([]);\n    return this;\n};\n\nRBush.prototype.remove = function remove (item, equalsFn) {\n    if (!item) { return this; }\n\n    var node = this.data;\n    var bbox = this.toBBox(item);\n    var path = [];\n    var indexes = [];\n    var i, parent, goingUp;\n\n    // depth-first iterative tree traversal\n    while (node || path.length) {\n\n        if (!node) { // go up\n            node = path.pop();\n            parent = path[path.length - 1];\n            i = indexes.pop();\n            goingUp = true;\n        }\n\n        if (node.leaf) { // check current node\n            var index = findItem(item, node.children, equalsFn);\n\n            if (index !== -1) {\n                // item found, remove the item and condense tree upwards\n                node.children.splice(index, 1);\n                path.push(node);\n                this._condense(path);\n                return this;\n            }\n        }\n\n        if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n            path.push(node);\n            indexes.push(i);\n            i = 0;\n            parent = node;\n            node = node.children[0];\n\n        } else if (parent) { // go right\n            i++;\n            node = parent.children[i];\n            goingUp = false;\n\n        } else { node = null; } // nothing found\n    }\n\n    return this;\n};\n\nRBush.prototype.toBBox = function toBBox (item) { return item; };\n\nRBush.prototype.compareMinX = function compareMinX (a, b) { return a.minX - b.minX; };\nRBush.prototype.compareMinY = function compareMinY (a, b) { return a.minY - b.minY; };\n\nRBush.prototype.toJSON = function toJSON () { return this.data; };\n\nRBush.prototype.fromJSON = function fromJSON (data) {\n    this.data = data;\n    return this;\n};\n\nRBush.prototype._all = function _all (node, result) {\n    var nodesToSearch = [];\n    while (node) {\n        if (node.leaf) { result.push.apply(result, node.children); }\n        else { nodesToSearch.push.apply(nodesToSearch, node.children); }\n\n        node = nodesToSearch.pop();\n    }\n    return result;\n};\n\nRBush.prototype._build = function _build (items, left, right, height) {\n\n    var N = right - left + 1;\n    var M = this._maxEntries;\n    var node;\n\n    if (N <= M) {\n        // reached leaf level; return leaf\n        node = createNode(items.slice(left, right + 1));\n        calcBBox(node, this.toBBox);\n        return node;\n    }\n\n    if (!height) {\n        // target height of the bulk-loaded tree\n        height = Math.ceil(Math.log(N) / Math.log(M));\n\n        // target number of root entries to maximize storage utilization\n        M = Math.ceil(N / Math.pow(M, height - 1));\n    }\n\n    node = createNode([]);\n    node.leaf = false;\n    node.height = height;\n\n    // split the items into M mostly square tiles\n\n    var N2 = Math.ceil(N / M);\n    var N1 = N2 * Math.ceil(Math.sqrt(M));\n\n    multiSelect(items, left, right, N1, this.compareMinX);\n\n    for (var i = left; i <= right; i += N1) {\n\n        var right2 = Math.min(i + N1 - 1, right);\n\n        multiSelect(items, i, right2, N2, this.compareMinY);\n\n        for (var j = i; j <= right2; j += N2) {\n\n            var right3 = Math.min(j + N2 - 1, right2);\n\n            // pack each entry recursively\n            node.children.push(this._build(items, j, right3, height - 1));\n        }\n    }\n\n    calcBBox(node, this.toBBox);\n\n    return node;\n};\n\nRBush.prototype._chooseSubtree = function _chooseSubtree (bbox, node, level, path) {\n    while (true) {\n        path.push(node);\n\n        if (node.leaf || path.length - 1 === level) { break; }\n\n        var minArea = Infinity;\n        var minEnlargement = Infinity;\n        var targetNode = (void 0);\n\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var area = bboxArea(child);\n            var enlargement = enlargedArea(bbox, child) - area;\n\n            // choose entry with the least area enlargement\n            if (enlargement < minEnlargement) {\n                minEnlargement = enlargement;\n                minArea = area < minArea ? area : minArea;\n                targetNode = child;\n\n            } else if (enlargement === minEnlargement) {\n                // otherwise choose one with the smallest area\n                if (area < minArea) {\n                    minArea = area;\n                    targetNode = child;\n                }\n            }\n        }\n\n        node = targetNode || node.children[0];\n    }\n\n    return node;\n};\n\nRBush.prototype._insert = function _insert (item, level, isNode) {\n    var bbox = isNode ? item : this.toBBox(item);\n    var insertPath = [];\n\n    // find the best node for accommodating the item, saving all nodes along the path too\n    var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n    // put the item into the node\n    node.children.push(item);\n    extend(node, bbox);\n\n    // split on node overflow; propagate upwards if necessary\n    while (level >= 0) {\n        if (insertPath[level].children.length > this._maxEntries) {\n            this._split(insertPath, level);\n            level--;\n        } else { break; }\n    }\n\n    // adjust bboxes along the insertion path\n    this._adjustParentBBoxes(bbox, insertPath, level);\n};\n\n// split overflowed node into two\nRBush.prototype._split = function _split (insertPath, level) {\n    var node = insertPath[level];\n    var M = node.children.length;\n    var m = this._minEntries;\n\n    this._chooseSplitAxis(node, m, M);\n\n    var splitIndex = this._chooseSplitIndex(node, m, M);\n\n    var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n    newNode.height = node.height;\n    newNode.leaf = node.leaf;\n\n    calcBBox(node, this.toBBox);\n    calcBBox(newNode, this.toBBox);\n\n    if (level) { insertPath[level - 1].children.push(newNode); }\n    else { this._splitRoot(node, newNode); }\n};\n\nRBush.prototype._splitRoot = function _splitRoot (node, newNode) {\n    // split root node\n    this.data = createNode([node, newNode]);\n    this.data.height = node.height + 1;\n    this.data.leaf = false;\n    calcBBox(this.data, this.toBBox);\n};\n\nRBush.prototype._chooseSplitIndex = function _chooseSplitIndex (node, m, M) {\n    var index;\n    var minOverlap = Infinity;\n    var minArea = Infinity;\n\n    for (var i = m; i <= M - m; i++) {\n        var bbox1 = distBBox(node, 0, i, this.toBBox);\n        var bbox2 = distBBox(node, i, M, this.toBBox);\n\n        var overlap = intersectionArea(bbox1, bbox2);\n        var area = bboxArea(bbox1) + bboxArea(bbox2);\n\n        // choose distribution with minimum overlap\n        if (overlap < minOverlap) {\n            minOverlap = overlap;\n            index = i;\n\n            minArea = area < minArea ? area : minArea;\n\n        } else if (overlap === minOverlap) {\n            // otherwise choose distribution with minimum area\n            if (area < minArea) {\n                minArea = area;\n                index = i;\n            }\n        }\n    }\n\n    return index || M - m;\n};\n\n// sorts node children by the best axis for split\nRBush.prototype._chooseSplitAxis = function _chooseSplitAxis (node, m, M) {\n    var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n    var compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n    var xMargin = this._allDistMargin(node, m, M, compareMinX);\n    var yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n    // if total distributions margin value is minimal for x, sort by minX,\n    // otherwise it's already sorted by minY\n    if (xMargin < yMargin) { node.children.sort(compareMinX); }\n};\n\n// total margin of all possible split distributions where each node is at least m full\nRBush.prototype._allDistMargin = function _allDistMargin (node, m, M, compare) {\n    node.children.sort(compare);\n\n    var toBBox = this.toBBox;\n    var leftBBox = distBBox(node, 0, m, toBBox);\n    var rightBBox = distBBox(node, M - m, M, toBBox);\n    var margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n    for (var i = m; i < M - m; i++) {\n        var child = node.children[i];\n        extend(leftBBox, node.leaf ? toBBox(child) : child);\n        margin += bboxMargin(leftBBox);\n    }\n\n    for (var i$1 = M - m - 1; i$1 >= m; i$1--) {\n        var child$1 = node.children[i$1];\n        extend(rightBBox, node.leaf ? toBBox(child$1) : child$1);\n        margin += bboxMargin(rightBBox);\n    }\n\n    return margin;\n};\n\nRBush.prototype._adjustParentBBoxes = function _adjustParentBBoxes (bbox, path, level) {\n    // adjust bboxes along the given tree path\n    for (var i = level; i >= 0; i--) {\n        extend(path[i], bbox);\n    }\n};\n\nRBush.prototype._condense = function _condense (path) {\n    // go through the path, removing empty nodes and updating bboxes\n    for (var i = path.length - 1, siblings = (void 0); i >= 0; i--) {\n        if (path[i].children.length === 0) {\n            if (i > 0) {\n                siblings = path[i - 1].children;\n                siblings.splice(siblings.indexOf(path[i]), 1);\n\n            } else { this.clear(); }\n\n        } else { calcBBox(path[i], this.toBBox); }\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) { return items.indexOf(item); }\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) { return i; }\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) { destNode = createNode(null); }\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k; i < p; i++) {\n        var child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX);\n    var minY = Math.max(a.minY, b.minY);\n    var maxX = Math.min(a.maxX, b.maxX);\n    var maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) { continue; }\n\n        var mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\nreturn RBush;\n\n}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {Geometry|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar asserts_1 = require(\"ol/asserts\");\r\nvar GeometryType_1 = __importDefault(require(\"ol/geom/GeometryType\"));\r\nvar EventType_1 = __importDefault(require(\"ol/events/EventType\"));\r\nvar source_1 = require(\"ol/source\");\r\nvar Feature_1 = __importDefault(require(\"ol/Feature\"));\r\nvar Polygon_1 = __importDefault(require(\"ol/geom/Polygon\"));\r\n/**\r\n * this code modified from Openlayers Cluster\r\n */\r\nvar Honeycomb = /** @class */ (function (_super) {\r\n    __extends(Honeycomb, _super);\r\n    function Honeycomb(options) {\r\n        var _this = _super.call(this, {\r\n            attributions: options.attributions,\r\n            wrapX: options.wrapX\r\n        }) || this;\r\n        _this.resolution = undefined;\r\n        _this._radius = options.radius !== undefined\r\n            ? options.radius > 0 ? options.radius : 20\r\n            : 20;\r\n        _this.features = [];\r\n        _this.geometryFunction = options.geometryFunction || function (feature) {\r\n            var geometry = feature.getGeometry();\r\n            asserts_1.assert(geometry.getType() === GeometryType_1.default.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\r\n            return geometry;\r\n        };\r\n        _this.boundRefresh_ = _this.refresh.bind(_this);\r\n        _this.setSource(options.source || null);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    Honeycomb.prototype.clear = function (opt_fast) {\r\n        if (opt_fast === void 0) { opt_fast = false; }\r\n        this.features.length = 0;\r\n        _super.prototype.clear.call(this, opt_fast);\r\n    };\r\n    Object.defineProperty(Honeycomb.prototype, \"radius\", {\r\n        get: function () {\r\n            return this._radius;\r\n        },\r\n        set: function (vlaue) {\r\n            if (vlaue && vlaue > 0) {\r\n                this._radius = vlaue;\r\n                this.refresh();\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Get the distance in pixels between clusters.\r\n     * @return {number} Distance.\r\n     * @api\r\n     */\r\n    Honeycomb.prototype.getRadius = function () {\r\n        return this._radius;\r\n    };\r\n    /**\r\n     * Set the distance in pixels between clusters.\r\n     * @param {number} radius The distance in pixels.\r\n     * @api\r\n     */\r\n    Honeycomb.prototype.setRadius = function (radius) {\r\n        this._radius = radius;\r\n    };\r\n    /**\r\n     * Get a reference to the wrapped source.\r\n     * @return {VectorSource} Source.\r\n     * @api\r\n     */\r\n    Honeycomb.prototype.getSource = function () {\r\n        return this.source;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Honeycomb.prototype.loadFeatures = function (extent, resolution, projection) {\r\n        if (this.source) {\r\n            this.source.loadFeatures(extent, resolution, projection);\r\n            if (resolution !== this.resolution) {\r\n                this.clear();\r\n                this.resolution = resolution;\r\n                this.cluster();\r\n                this.addFeatures(this.features);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the wrapped source.\r\n     * @param {VectorSource} source The new source for this instance.\r\n     * @api\r\n     */\r\n    Honeycomb.prototype.setSource = function (source) {\r\n        if (this.source) {\r\n            this.source.removeEventListener(EventType_1.default.CHANGE, this.boundRefresh_);\r\n        }\r\n        this.source = source;\r\n        if (source) {\r\n            source.addEventListener(EventType_1.default.CHANGE, this.boundRefresh_);\r\n        }\r\n        this.refresh();\r\n    };\r\n    /**\r\n     * Handle the source changing.\r\n     * @override\r\n     */\r\n    Honeycomb.prototype.refresh = function () {\r\n        this.clear();\r\n        this.cluster();\r\n        this.addFeatures(this.features);\r\n    };\r\n    /**\r\n     * @protected\r\n     */\r\n    Honeycomb.prototype.cluster = function () {\r\n        this.createHoneycomb();\r\n    };\r\n    Honeycomb.prototype.createHoneycomb = function () {\r\n        if (this.resolution === undefined || !this.source) {\r\n            return;\r\n        }\r\n        var extent = this.source.getExtent();\r\n        //this._radius 六边形外接圆半径\r\n        //半径\r\n        var radius = this._radius * this.resolution;\r\n        //半径的一半\r\n        var halfR = radius >> 1;\r\n        //行高\r\n        var rowH = radius + halfR;\r\n        //列宽的一半   \r\n        var halfW = radius * Math.sin(Math.PI / 3);\r\n        var colW = halfW << 1;\r\n        var minx = extent[0], miny = extent[1];\r\n        minx -= halfW;\r\n        miny -= radius;\r\n        var features = this.source.getFeatures();\r\n        var clusterDict = new Map();\r\n        for (var i = 0, ii = features.length; i < ii; i++) {\r\n            var feature = features[i];\r\n            var geometry = this.geometryFunction(feature);\r\n            if (geometry) {\r\n                //获取当前点 \r\n                var coordinates = geometry.getCoordinates();\r\n                var ptX = coordinates[0], ptY = coordinates[1];\r\n                var mayRow = Math.floor((ptY - miny) / rowH);\r\n                var pxPy = ((mayRow & 1) === 0) ? ptX : (ptX + halfW);\r\n                var mayCol = Math.floor((pxPy - minx) / colW);\r\n                var curRowBottom = mayRow * rowH + miny;\r\n                var disputeBottom = curRowBottom + radius;\r\n                //处于争议区\r\n                if (ptY > disputeBottom) {\r\n                    var disputeTop = disputeBottom + halfR;\r\n                    var curLeft = mayCol * colW;\r\n                    var curCenterX = curLeft + halfW, curRight = curLeft + colW;\r\n                    var trangle = [\r\n                        [curCenterX, disputeTop],\r\n                        [curRight, disputeBottom],\r\n                        [curLeft, disputeBottom]\r\n                    ];\r\n                    if (!this.containsPoint(trangle, coordinates)) {\r\n                        mayRow += 1;\r\n                    }\r\n                }\r\n                var _a = [mayCol, mayRow], col = _a[0], row = _a[1];\r\n                var key = col + '-' + row;\r\n                if (!clusterDict.has(key)) {\r\n                    var fe = this.createHoneycombByColRow(col, row, minx, miny, colW, rowH, radius, halfR, halfW);\r\n                    clusterDict.set(key, {\r\n                        feature: fe,\r\n                        features: [feature]\r\n                    });\r\n                }\r\n                else {\r\n                    clusterDict.get(key).features.push(feature);\r\n                }\r\n            }\r\n        }\r\n        var curClusterFeatures = [];\r\n        clusterDict.forEach(function (featureInfo, key) {\r\n            var curFeature = featureInfo.feature;\r\n            curFeature.set(\"features\", featureInfo.features);\r\n            curClusterFeatures.push(curFeature);\r\n        });\r\n        this.features = curClusterFeatures;\r\n    };\r\n    Honeycomb.prototype.containsPoint = function (points, pt) {\r\n        //乘积\r\n        var product = null;\r\n        for (var i = 0; i < 3; i++) {\r\n            var point = points[i];\r\n            var nextPoint = points[i % 2];\r\n            var vectorA = [pt[0] - point[0], pt[1] - point[1]];\r\n            var vectorB = [nextPoint[0] - pt[0], nextPoint[1] - pt[1]];\r\n            var r = vectorA[0] * vectorB[1] - vectorA[1] * vectorB[0];\r\n            if (r === 0) {\r\n                product = 0;\r\n                break;\r\n            }\r\n            r = r > 0 ? 1 : -1;\r\n            if (i === 0) {\r\n                product = r;\r\n            }\r\n            else {\r\n                product *= r;\r\n            }\r\n        }\r\n        if (product < 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    Honeycomb.prototype.createHoneycombByColRow = function (col, row, minX, minY, colW, rowH, r, halfR, halfW) {\r\n        var y1 = row * rowH + minY;\r\n        var x1 = col * colW + minX;\r\n        if ((row & 1) === 1) {\r\n            x1 -= halfW;\r\n        }\r\n        var center = x1 + halfW;\r\n        var right = center + halfW;\r\n        var top2 = y1 + r;\r\n        var points = [\r\n            [x1, y1],\r\n            [center, y1 - halfR],\r\n            [right, y1],\r\n            [right, top2],\r\n            [center, top2 + halfR],\r\n            [x1, top2]\r\n        ];\r\n        var polygon = new Polygon_1.default([points]);\r\n        var cluster = new Feature_1.default({\r\n            geometry: polygon\r\n        });\r\n        return cluster;\r\n    };\r\n    return Honeycomb;\r\n}(source_1.Vector));\r\nexports.default = Honeycomb;\r\n","(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = global || self, global.RBush = factory());\n}(this, function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) { swap(arr, left, right); }\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) { i++; }\n            while (compare(arr[j], t) > 0) { j--; }\n        }\n\n        if (compare(arr[left], t) === 0) { swap(arr, left, j); }\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) { left = j + 1; }\n        if (k <= j) { right = j - 1; }\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nvar RBush = function RBush(maxEntries) {\n    if ( maxEntries === void 0 ) maxEntries = 9;\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n    this.clear();\n};\n\nRBush.prototype.all = function all () {\n    return this._all(this.data, []);\n};\n\nRBush.prototype.search = function search (bbox) {\n    var node = this.data;\n    var result = [];\n\n    if (!intersects(bbox, node)) { return result; }\n\n    var toBBox = this.toBBox;\n    var nodesToSearch = [];\n\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf) { result.push(child); }\n                else if (contains(bbox, childBBox)) { this._all(child, result); }\n                else { nodesToSearch.push(child); }\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return result;\n};\n\nRBush.prototype.collides = function collides (bbox) {\n    var node = this.data;\n\n    if (!intersects(bbox, node)) { return false; }\n\n    var nodesToSearch = [];\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var childBBox = node.leaf ? this.toBBox(child) : child;\n\n            if (intersects(bbox, childBBox)) {\n                if (node.leaf || contains(bbox, childBBox)) { return true; }\n                nodesToSearch.push(child);\n            }\n        }\n        node = nodesToSearch.pop();\n    }\n\n    return false;\n};\n\nRBush.prototype.load = function load (data) {\n    if (!(data && data.length)) { return this; }\n\n    if (data.length < this._minEntries) {\n        for (var i = 0; i < data.length; i++) {\n            this.insert(data[i]);\n        }\n        return this;\n    }\n\n    // recursively build the tree with the given data from scratch using OMT algorithm\n    var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n    if (!this.data.children.length) {\n        // save as is if tree is empty\n        this.data = node;\n\n    } else if (this.data.height === node.height) {\n        // split root if trees have the same height\n        this._splitRoot(this.data, node);\n\n    } else {\n        if (this.data.height < node.height) {\n            // swap trees if inserted one is bigger\n            var tmpNode = this.data;\n            this.data = node;\n            node = tmpNode;\n        }\n\n        // insert the small tree into the large tree at appropriate level\n        this._insert(node, this.data.height - node.height - 1, true);\n    }\n\n    return this;\n};\n\nRBush.prototype.insert = function insert (item) {\n    if (item) { this._insert(item, this.data.height - 1); }\n    return this;\n};\n\nRBush.prototype.clear = function clear () {\n    this.data = createNode([]);\n    return this;\n};\n\nRBush.prototype.remove = function remove (item, equalsFn) {\n    if (!item) { return this; }\n\n    var node = this.data;\n    var bbox = this.toBBox(item);\n    var path = [];\n    var indexes = [];\n    var i, parent, goingUp;\n\n    // depth-first iterative tree traversal\n    while (node || path.length) {\n\n        if (!node) { // go up\n            node = path.pop();\n            parent = path[path.length - 1];\n            i = indexes.pop();\n            goingUp = true;\n        }\n\n        if (node.leaf) { // check current node\n            var index = findItem(item, node.children, equalsFn);\n\n            if (index !== -1) {\n                // item found, remove the item and condense tree upwards\n                node.children.splice(index, 1);\n                path.push(node);\n                this._condense(path);\n                return this;\n            }\n        }\n\n        if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n            path.push(node);\n            indexes.push(i);\n            i = 0;\n            parent = node;\n            node = node.children[0];\n\n        } else if (parent) { // go right\n            i++;\n            node = parent.children[i];\n            goingUp = false;\n\n        } else { node = null; } // nothing found\n    }\n\n    return this;\n};\n\nRBush.prototype.toBBox = function toBBox (item) { return item; };\n\nRBush.prototype.compareMinX = function compareMinX (a, b) { return a.minX - b.minX; };\nRBush.prototype.compareMinY = function compareMinY (a, b) { return a.minY - b.minY; };\n\nRBush.prototype.toJSON = function toJSON () { return this.data; };\n\nRBush.prototype.fromJSON = function fromJSON (data) {\n    this.data = data;\n    return this;\n};\n\nRBush.prototype._all = function _all (node, result) {\n    var nodesToSearch = [];\n    while (node) {\n        if (node.leaf) { result.push.apply(result, node.children); }\n        else { nodesToSearch.push.apply(nodesToSearch, node.children); }\n\n        node = nodesToSearch.pop();\n    }\n    return result;\n};\n\nRBush.prototype._build = function _build (items, left, right, height) {\n\n    var N = right - left + 1;\n    var M = this._maxEntries;\n    var node;\n\n    if (N <= M) {\n        // reached leaf level; return leaf\n        node = createNode(items.slice(left, right + 1));\n        calcBBox(node, this.toBBox);\n        return node;\n    }\n\n    if (!height) {\n        // target height of the bulk-loaded tree\n        height = Math.ceil(Math.log(N) / Math.log(M));\n\n        // target number of root entries to maximize storage utilization\n        M = Math.ceil(N / Math.pow(M, height - 1));\n    }\n\n    node = createNode([]);\n    node.leaf = false;\n    node.height = height;\n\n    // split the items into M mostly square tiles\n\n    var N2 = Math.ceil(N / M);\n    var N1 = N2 * Math.ceil(Math.sqrt(M));\n\n    multiSelect(items, left, right, N1, this.compareMinX);\n\n    for (var i = left; i <= right; i += N1) {\n\n        var right2 = Math.min(i + N1 - 1, right);\n\n        multiSelect(items, i, right2, N2, this.compareMinY);\n\n        for (var j = i; j <= right2; j += N2) {\n\n            var right3 = Math.min(j + N2 - 1, right2);\n\n            // pack each entry recursively\n            node.children.push(this._build(items, j, right3, height - 1));\n        }\n    }\n\n    calcBBox(node, this.toBBox);\n\n    return node;\n};\n\nRBush.prototype._chooseSubtree = function _chooseSubtree (bbox, node, level, path) {\n    while (true) {\n        path.push(node);\n\n        if (node.leaf || path.length - 1 === level) { break; }\n\n        var minArea = Infinity;\n        var minEnlargement = Infinity;\n        var targetNode = (void 0);\n\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n            var area = bboxArea(child);\n            var enlargement = enlargedArea(bbox, child) - area;\n\n            // choose entry with the least area enlargement\n            if (enlargement < minEnlargement) {\n                minEnlargement = enlargement;\n                minArea = area < minArea ? area : minArea;\n                targetNode = child;\n\n            } else if (enlargement === minEnlargement) {\n                // otherwise choose one with the smallest area\n                if (area < minArea) {\n                    minArea = area;\n                    targetNode = child;\n                }\n            }\n        }\n\n        node = targetNode || node.children[0];\n    }\n\n    return node;\n};\n\nRBush.prototype._insert = function _insert (item, level, isNode) {\n    var bbox = isNode ? item : this.toBBox(item);\n    var insertPath = [];\n\n    // find the best node for accommodating the item, saving all nodes along the path too\n    var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n    // put the item into the node\n    node.children.push(item);\n    extend(node, bbox);\n\n    // split on node overflow; propagate upwards if necessary\n    while (level >= 0) {\n        if (insertPath[level].children.length > this._maxEntries) {\n            this._split(insertPath, level);\n            level--;\n        } else { break; }\n    }\n\n    // adjust bboxes along the insertion path\n    this._adjustParentBBoxes(bbox, insertPath, level);\n};\n\n// split overflowed node into two\nRBush.prototype._split = function _split (insertPath, level) {\n    var node = insertPath[level];\n    var M = node.children.length;\n    var m = this._minEntries;\n\n    this._chooseSplitAxis(node, m, M);\n\n    var splitIndex = this._chooseSplitIndex(node, m, M);\n\n    var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n    newNode.height = node.height;\n    newNode.leaf = node.leaf;\n\n    calcBBox(node, this.toBBox);\n    calcBBox(newNode, this.toBBox);\n\n    if (level) { insertPath[level - 1].children.push(newNode); }\n    else { this._splitRoot(node, newNode); }\n};\n\nRBush.prototype._splitRoot = function _splitRoot (node, newNode) {\n    // split root node\n    this.data = createNode([node, newNode]);\n    this.data.height = node.height + 1;\n    this.data.leaf = false;\n    calcBBox(this.data, this.toBBox);\n};\n\nRBush.prototype._chooseSplitIndex = function _chooseSplitIndex (node, m, M) {\n    var index;\n    var minOverlap = Infinity;\n    var minArea = Infinity;\n\n    for (var i = m; i <= M - m; i++) {\n        var bbox1 = distBBox(node, 0, i, this.toBBox);\n        var bbox2 = distBBox(node, i, M, this.toBBox);\n\n        var overlap = intersectionArea(bbox1, bbox2);\n        var area = bboxArea(bbox1) + bboxArea(bbox2);\n\n        // choose distribution with minimum overlap\n        if (overlap < minOverlap) {\n            minOverlap = overlap;\n            index = i;\n\n            minArea = area < minArea ? area : minArea;\n\n        } else if (overlap === minOverlap) {\n            // otherwise choose distribution with minimum area\n            if (area < minArea) {\n                minArea = area;\n                index = i;\n            }\n        }\n    }\n\n    return index || M - m;\n};\n\n// sorts node children by the best axis for split\nRBush.prototype._chooseSplitAxis = function _chooseSplitAxis (node, m, M) {\n    var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n    var compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n    var xMargin = this._allDistMargin(node, m, M, compareMinX);\n    var yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n    // if total distributions margin value is minimal for x, sort by minX,\n    // otherwise it's already sorted by minY\n    if (xMargin < yMargin) { node.children.sort(compareMinX); }\n};\n\n// total margin of all possible split distributions where each node is at least m full\nRBush.prototype._allDistMargin = function _allDistMargin (node, m, M, compare) {\n    node.children.sort(compare);\n\n    var toBBox = this.toBBox;\n    var leftBBox = distBBox(node, 0, m, toBBox);\n    var rightBBox = distBBox(node, M - m, M, toBBox);\n    var margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n    for (var i = m; i < M - m; i++) {\n        var child = node.children[i];\n        extend(leftBBox, node.leaf ? toBBox(child) : child);\n        margin += bboxMargin(leftBBox);\n    }\n\n    for (var i$1 = M - m - 1; i$1 >= m; i$1--) {\n        var child$1 = node.children[i$1];\n        extend(rightBBox, node.leaf ? toBBox(child$1) : child$1);\n        margin += bboxMargin(rightBBox);\n    }\n\n    return margin;\n};\n\nRBush.prototype._adjustParentBBoxes = function _adjustParentBBoxes (bbox, path, level) {\n    // adjust bboxes along the given tree path\n    for (var i = level; i >= 0; i--) {\n        extend(path[i], bbox);\n    }\n};\n\nRBush.prototype._condense = function _condense (path) {\n    // go through the path, removing empty nodes and updating bboxes\n    for (var i = path.length - 1, siblings = (void 0); i >= 0; i--) {\n        if (path[i].children.length === 0) {\n            if (i > 0) {\n                siblings = path[i - 1].children;\n                siblings.splice(siblings.indexOf(path[i]), 1);\n\n            } else { this.clear(); }\n\n        } else { calcBBox(path[i], this.toBBox); }\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) { return items.indexOf(item); }\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) { return i; }\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) { destNode = createNode(null); }\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k; i < p; i++) {\n        var child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX);\n    var minY = Math.max(a.minY, b.minY);\n    var maxX = Math.min(a.maxX, b.maxX);\n    var maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) { continue; }\n\n        var mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n\nreturn RBush;\n\n}));\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","// This Source Code Form is subject to the terms of the Mozilla Public\n// License, v. 2.0. If a copy of the MPL was not distributed with this\n// file, You can obtain one at http://mozilla.org/MPL/2.0/\n// Variable to hold current primary touch event identifier.\n// iOS needs this since it does not attribute\n// identifier 0 to primary touch event.\nvar primaryTouchId = null;\n// Variable to hold mouse pointer captures.\nvar mouseCaptureTarget = null;\nif (!(\"PointerEvent\" in window)) {\n    // Define {set,release}PointerCapture\n    definePointerCapture();\n    // Create Pointer polyfill from mouse events only on non-touch device\n    if (!(\"TouchEvent\" in window)) {\n        addMouseToPointerListener(document, \"mousedown\", \"pointerdown\");\n        addMouseToPointerListener(document, \"mousemove\", \"pointermove\");\n        addMouseToPointerListener(document, \"mouseup\", \"pointerup\");\n    }\n    // Define Pointer polyfill from touch events\n    addTouchToPointerListener(document, \"touchstart\", \"pointerdown\");\n    addTouchToPointerListener(document, \"touchmove\", \"pointermove\");\n    addTouchToPointerListener(document, \"touchend\", \"pointerup\");\n}\n// Function defining {set,release}PointerCapture from {set,releas}Capture\nfunction definePointerCapture() {\n    Element.prototype.setPointerCapture = Element.prototype.setCapture;\n    Element.prototype.releasePointerCapture = Element.prototype.releaseCapture;\n}\n// Function converting a Mouse event to a Pointer event.\nfunction addMouseToPointerListener(target, mouseType, pointerType) {\n    target.addEventListener(mouseType, function (mouseEvent) {\n        var pointerEvent = new MouseEvent(pointerType, mouseEvent);\n        pointerEvent.pointerId = 1;\n        pointerEvent.isPrimary = true;\n        pointerEvent.pointerType = \"mouse\";\n        pointerEvent.width = 1;\n        pointerEvent.height = 1;\n        pointerEvent.tiltX = 0;\n        pointerEvent.tiltY = 0;\n        // pressure is 0.5 if a button is holded\n        \"buttons\" in mouseEvent && mouseEvent.buttons !== 0\n            ? (pointerEvent.pressure = 0.5)\n            : (pointerEvent.pressure = 0);\n        // if already capturing mouse event, transfer target\n        // and don't forget implicit release on mouseup.\n        var target = mouseEvent.target;\n        if (mouseCaptureTarget !== null) {\n            target = mouseCaptureTarget;\n            if (mouseType === \"mouseup\") {\n                mouseCaptureTarget = null;\n            }\n        }\n        target.dispatchEvent(pointerEvent);\n        if (pointerEvent.defaultPrevented) {\n            mouseEvent.preventDefault();\n        }\n    });\n}\n// Function converting a Touch event to a Pointer event.\nfunction addTouchToPointerListener(target, touchType, pointerType) {\n    target.addEventListener(touchType, function (touchEvent) {\n        var changedTouches = touchEvent.changedTouches;\n        var nbTouches = changedTouches.length;\n        for (var t = 0; t < nbTouches; t++) {\n            var pointerEvent = new CustomEvent(pointerType, {\n                bubbles: true,\n                cancelable: true\n            });\n            pointerEvent.ctrlKey = touchEvent.ctrlKey;\n            pointerEvent.shiftKey = touchEvent.shiftKey;\n            pointerEvent.altKey = touchEvent.altKey;\n            pointerEvent.metaKey = touchEvent.metaKey;\n            var touch = changedTouches.item(t);\n            pointerEvent.clientX = touch.clientX;\n            pointerEvent.clientY = touch.clientY;\n            pointerEvent.screenX = touch.screenX;\n            pointerEvent.screenY = touch.screenY;\n            pointerEvent.pageX = touch.pageX;\n            pointerEvent.pageY = touch.pageY;\n            var rect = touch.target.getBoundingClientRect();\n            pointerEvent.offsetX = touch.clientX - rect.left;\n            pointerEvent.offsetY = touch.clientY - rect.top;\n            pointerEvent.pointerId = 1 + touch.identifier;\n            // Default values for standard MouseEvent fields.\n            pointerEvent.button = 0;\n            pointerEvent.buttons = 1;\n            pointerEvent.movementX = 0;\n            pointerEvent.movementY = 0;\n            pointerEvent.region = null;\n            pointerEvent.relatedTarget = null;\n            pointerEvent.x = pointerEvent.clientX;\n            pointerEvent.y = pointerEvent.clientY;\n            // Pointer event details\n            pointerEvent.pointerType = \"touch\";\n            pointerEvent.width = 1;\n            pointerEvent.height = 1;\n            pointerEvent.tiltX = 0;\n            pointerEvent.tiltY = 0;\n            pointerEvent.pressure = 1;\n            // First touch is the primary pointer event.\n            if (touchType === \"touchstart\" && primaryTouchId === null) {\n                primaryTouchId = touch.identifier;\n            }\n            pointerEvent.isPrimary = touch.identifier === primaryTouchId;\n            // If first touch ends, reset primary touch id.\n            if (touchType === \"touchend\" && pointerEvent.isPrimary) {\n                primaryTouchId = null;\n            }\n            touchEvent.target.dispatchEvent(pointerEvent);\n            if (pointerEvent.defaultPrevented) {\n                touchEvent.preventDefault();\n            }\n        }\n    });\n}\n//# sourceMappingURL=elm-pep.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.3.1';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = [];\n            this.listeners_[type] = listeners;\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {import(\"./events.js\").ListenerFunction} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {Geometry|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' && typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            }\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {PointerEvent} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {PointerEvent}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport 'elm-pep';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport EventType from './events/EventType.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            this.dragListenerKeys_.push(listen(document, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(document, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ || this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return Math.abs(extent1[0] - extent2[0]) < tolerance && Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance && Math.abs(extent1[3] - extent2[3]) < tolerance;\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + width * i / opt_stops, extent[1], extent[2], extent[1] + height * i / opt_stops, extent[2] - width * i / opt_stops, extent[3], extent[0], extent[3] - height * i / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0], extent[1],\n            extent[2], extent[1],\n            extent[2], extent[3],\n            extent[0], extent[3]\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() && (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = (worldsAway * worldWidth);\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { clamp } from './math.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\nimport { getWidth } from './extent.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    var projectionExtent = projection.getExtent();\n    if (projection.canWrapX() && (coordinate[0] < projectionExtent[0] || coordinate[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / worldWidth);\n        coordinate[0] -= (worldsAway * worldWidth);\n    }\n    return coordinate;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\nimport { add as addProj, clear as clearProj, get as getProj } from './proj/projections.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        getProj(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\nimport { memoizeOne } from '../functions.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n      * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT, toUserCoordinate, toUserExtent, fromUserCoordinate, fromUserExtent, getUserProjection } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate.js';\nimport { easeOut } from './easing.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation))\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size) ? opt_size.slice() : [100, 100];\n        this.resolveConstraints(0);\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / logPower) / max;\n            return value;\n        });\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = assign({ size: this.getViewportSize_() }, opt_options || {});\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent.clone().transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSize_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenterInternal([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length ?\n        opt_canvasPool.shift() :\n        WORKER_OFFSCREEN_CANVAS ?\n            new OffscreenCanvas(opt_width || 300, opt_height || 300) :\n            document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed\n        });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = zIndex !== undefined ? zIndex : (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\nimport { toUserCoordinate, fromUserCoordinate } from './proj.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        var handleMapBrowserEvent = _this.handleMapBrowserEvent.bind(_this);\n        for (var key in MapBrowserEventType) {\n            _this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], handleMapBrowserEvent);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        var handleBrowserEvent = _this.handleBrowserEvent.bind(_this);\n        _this.viewport_.addEventListener(EventType.CONTEXTMENU, handleBrowserEvent, false);\n        _this.viewport_.addEventListener(EventType.WHEEL, handleBrowserEvent, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n        this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ?\n            options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = /** @type {Node} */ (mapBrowserEvent.originalEvent.target);\n        if (!mapBrowserEvent.dragging) {\n            if (this.overlayContainerStopEvent_.contains(target) || !(document.body.contains(target) || this.viewport_.getRootNode && this.viewport_.getRootNode().contains(target))) {\n                // Abort if the event target is a child of the container that doesn't allow\n                // event propagation or is no longer in the page. It's possible for the target to no longer\n                // be in the page if it has been removed in an event listener, this might happen in a Control\n                // that recreates it's content based on user interaction either manually or via a render\n                // in something like https://reactjs.org/\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10)\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @private\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render_ = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Update the projection. Rendering of the coordinates is done in\n     * `handleMouseMove` and `handleMouseUp`.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) {\n        this.render_.call(this, mapEvent);\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$'\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family'\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal'\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport { inView } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys, primaryAction, focus } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * In addition, if there is a `tabindex` attribute on the map element,\n * {@link module:ol/events/condition~focus} will also be applied.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : defaultCondition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent\").default} mapBrowserEvent Event.\n     * @return {boolean} Condition passes.\n     */\n    DragPan.prototype.conditionInternal_ = function (mapBrowserEvent) {\n        var pass = true;\n        if (mapBrowserEvent.map.getTargetElement().hasAttribute('tabindex')) {\n            pass = focus(mapBrowserEvent);\n        }\n        return pass && this.condition_(mapBrowserEvent);\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.conditionInternal_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtentInternal(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n            map.getPixelFromCoordinateInternal(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animateInternal({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always, focus } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * In addition, if there is a `tabindex` attribute on the map element,\n * {@link module:ol/events/condition~focus} will also be applied.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent\").default} mapBrowserEvent Event.\n     * @return {boolean} Condition passes.\n     */\n    MouseWheelZoom.prototype.conditionInternal_ = function (mapBrowserEvent) {\n        var pass = true;\n        if (mapBrowserEvent.map.getTargetElement().hasAttribute('tabindex')) {\n            pass = focus(mapBrowserEvent);\n        }\n        return pass && this.condition_(mapBrowserEvent);\n    };\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.conditionInternal_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD && !view.getConstrainResolution()) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution()) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? delta > 0 ? 1 : -1 : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0;\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroups) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontParameters } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    var heights = textHeights;\n    return function (fontSpec) {\n        var height = heights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight)) ? 1.2 : Number(font.lineHeight);\n                textHeights[fontSpec] = lineHeight * (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                heights[fontSpec] = height;\n                document.body.removeChild(div);\n            }\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if (( /** @type {*} */(labelOrImage).contextInstructions)) {\n        // label\n        context.translate(x, y);\n        context.scale(scale, scale);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else {\n        // image\n        context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale, h * scale);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { inView } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { renderDeclutterItems } from '../render.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            return callback.call(thisArg, feature, managed ? layer : null);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n                if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX() ? translatedCoordinate : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, declutteredFeatures);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport { getSquaredTolerance } from './renderer/vector.js';\nimport { getUserProjection, getTransformFromProjections } from './proj.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    var squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, frameState.pixelRatio);\n    var userTransform;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n        userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n    }\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { inView } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport ObjectEventType from '../ObjectEventType.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() && inView(layerState, viewState) && layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/control\n */\nimport Collection from './Collection.js';\nimport Attribution from './control/Attribution.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0]\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        var displacement = this.getDisplacement();\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.hitDetectionCanvas_ = this.canvas_;\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0]\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            displacement: this.getDisplacement().slice()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        var extent = geometry.getExtent();\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroups) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, registerFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         */\n        _this.declutterGroups_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                var declutterGroup = this.declutterGroups_ ?\n                    (o === 0 ? this.declutterGroups_[0] : [].concat(this.declutterGroups_[0])) :\n                    null;\n                this.drawChars_(begin, end, declutterGroup);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroups) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?') + (textState.textBaseline || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroups}\n         * @private\n         */\n        this.declutterGroups_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroups_;\n                /** @type {number} */ (declutter[0][4])++;\n            }\n            else {\n                declutter = [createEmpty()];\n                this.declutterGroups_ = declutter;\n                declutter[0].push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var angleChanged = false;\n    var index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text[index];\n        var charLength = scale * measureAndCacheTextWidth(font, char, cache);\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            angleChanged = angleChanged || delta !== 0;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result[index] = [x, y, charLength / 2, angle, char];\n        startM += charLength;\n    }\n    return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { drawImageOrLabel, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport RBush from 'rbush/rbush.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = textState.scale * pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            // make canvas 2 pixels wider to account for italic text width measurement errors\n            width: Math.ceil((renderWidth + 2) * scale),\n            height: Math.ceil((height + strokeWidth) * scale),\n            contextInstructions: contextInstructions\n        };\n        if (scale != 1) {\n            contextInstructions.push('scale', [scale, scale]);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = (0.5 - align);\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, x, y, imageOrLabel, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > imageOrLabel.width) ? imageOrLabel.width - originX : width;\n        var h = (height + originY > imageOrLabel.height) ? imageOrLabel.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, imageOrLabel, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs) {\n                if (fillStroke) {\n                    declutterArgs.push(fillInstruction, strokeInstruction, p1.slice(0), p2.slice(0), p3.slice(0), p4.slice(0));\n                }\n                declutterGroup.push(declutterArgs);\n            }\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, transform, opacity, imageOrLabel, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} opacity Layer opacity.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, opacity, declutterTree) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!declutterTree) {\n                    declutterTree = new RBush(9);\n                }\n                if (!declutterTree.collides(box)) {\n                    declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        var context = declutterData[0];\n                        var currentAlpha = context.globalAlpha;\n                        if (currentAlpha !== opacity) {\n                            context.globalAlpha = opacity;\n                        }\n                        if (declutterData.length > 11) {\n                            this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                        }\n                        drawImageOrLabel.apply(undefined, declutterData);\n                        if (currentAlpha !== opacity) {\n                            context.globalAlpha = currentAlpha;\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale;\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, declutterGroups, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, instruction[3])) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroups = featureCallback ? null : instruction[6];\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[7] = height;\n                        width = image.width;\n                        instruction[14] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    var declutterGroupIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        if (declutterGroups) {\n                            var index = Math.floor(declutterGroupIndex);\n                            if (declutterGroups.length < index + 1) {\n                                declutterGroup = createEmpty();\n                                declutterGroup.push(declutterGroups[0][4]);\n                                declutterGroups.push(declutterGroup);\n                            }\n                            declutterGroup = declutterGroups[index];\n                        }\n                        this.replayImageOrLabel_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                        if (declutterGroup) {\n                            if (declutterGroupIndex === Math.floor(declutterGroupIndex)) {\n                                this.declutterItems.push(this, declutterGroup, feature);\n                            }\n                            declutterGroupIndex += 1 / declutterGroup[4];\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : instruction[4];\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImageOrLabel_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImageOrLabel_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        if (!this.hitDetectionContext_) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            if (executor !== currentExecutor) {\n                currentExecutor = executor;\n                declutterItems.push({\n                    items: executor.declutterItems,\n                    opacity: opacity\n                });\n            }\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target && target.style.opacity === '' && target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transform) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels'\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\nimport { IMAGE_DECODE } from './has.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise.then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        }).catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler)\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D=} context A context with the image already drawn into.\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function (context) {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!context) {\n                context = createCanvasContext2D(1, 1);\n                context.drawImage(this.image_, 0, 0);\n            }\n            try {\n                context.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        if (this.isTainted_(ctx)) {\n            // If reading from the canvas throws a SecurityError the same effect can be\n            // achieved with globalCompositeOperation.\n            // This could be used as the default, but it is not fully supported by all\n            // browsers. E. g. Internet Explorer 11 does not support the multiply\n            // operation and the resulting image shape will be completelly filled with\n            // the provided color.\n            // So this is only used as a fallback. It is still better than having no icon\n            // at all.\n            var c = this.color_;\n            ctx.globalCompositeOperation = 'multiply';\n            ctx.fillStyle = 'rgb(' + c[0] + ',' + c[1] + ',' + c[2] + ')';\n            ctx.fillRect(0, 0, this.image_.width, this.image_.height);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n            return;\n        }\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport { get as getIconImage } from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ?\n            ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @override\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        var displacement = this.getDisplacement();\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        offset[0] += displacement[0];\n        offset[1] += displacement[1];\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @override\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { buffer, createEmpty, containsExtent, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX } from '../../extent.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\nimport { fromUserExtent, toUserExtent, getUserProjection, getTransformFromProjections } from '../../proj.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse, apply } from '../../transform.js';\nimport { createHitDetectionImageData, hitDetect } from '../../render/canvas/hitdetect.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped = !containsExtent(layerExtent, frameState.extent) && intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clip(context, frameState, layerExtent);\n            }\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, 0);\n        var declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n        replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : opacity;\n        }\n        return this.container;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(function (resolve, reject) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.renderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] / 2;\n                var height = size[1] / 2;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = this.getLayer();\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, layer_1.getDeclutter() ? declutteredFeatures : null);\n            return result;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() && projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] && loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([loadExtent[0] + worldWidth, loadExtent[1], loadExtent[2] + worldWidth, loadExtent[3]]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] && loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([loadExtent[0] - worldWidth, loadExtent[1], loadExtent[2] - worldWidth, loadExtent[3]]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.renderedRotation_ = viewState.rotation;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/render/canvas/hitdetet\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { Icon } from '../../style.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] / 2;\n    var height = size[1] / 2;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var canvas_1 = document.createElement('canvas');\n                canvas_1.width = imgSize[0];\n                canvas_1.height = imgSize[1];\n                var imgContext = canvas_1.getContext('2d', { alpha: false });\n                imgContext.fillStyle = color;\n                var img = imgContext.canvas;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                var width_1 = imgSize ? imgSize[0] : img.width;\n                var height_1 = imgSize ? imgSize[1] : img.height;\n                var iconContext = createCanvasContext2D(width_1, height_1);\n                iconContext.drawImage(img, 0, 0);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    size: image.getSize(),\n                    opacity: image.getOpacity(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView()\n                }));\n            }\n            var zIndex = Number(style.getZIndex());\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry && intersects(extent, geometry.getExtent())) {\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    document.body.appendChild(context.canvas);\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) * 4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + (256 * (g + (256 * r)));\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport { fromUserExtent } from '../../proj.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse } from '../../transform.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createTransformString } from '../../render/canvas.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        xhr.withCredentials = withCredentials;\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport RBush_ from 'rbush/rbush.js';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () {\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * @type {number}\n         */\n        this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION + (opt_destinationResolution ?\n            Math.max(0, Math.ceil(Math.log2(getArea(targetExtent) /\n                (opt_destinationResolution * opt_destinationResolution * 256 * 256))))\n            : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0 ? opt_maxResolution :\n        Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        var canUseScreen = typeof screen !== 'undefined';\n        var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n        var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n        var minCacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(Math.max(minCacheSize, options.cacheSize || 0));\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                tileState == TileState.LOADED ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill :\n            new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: this.getScale(),\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined,\n            padding: this.getPadding()\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","import Honeycomb from \"../../dist/index\"\r\n\r\nimport Feature from 'ol/Feature';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport Point from 'ol/geom/Point';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\r\nimport { OSM, Vector as VectorSource} from 'ol/source';\r\nimport {Circle as CircleStyle, Fill, Stroke, Style, Text} from 'ol/style';\r\n\r\nimport * as olProj from \"ol/proj\";\r\n\r\nconst pointNum = 100;\r\n\r\nconst features = [];\r\nfor (let i = 0; i < pointNum; i++) {\r\n  const x = Math.random() * 10 + 110;\r\n  const y = Math.random() * 4 + 30;\r\n\r\n\r\n  let pt = olProj.fromLonLat([x, y], \"EPSG:3857\");\r\n\r\n  const feature = new Feature(new Point(pt));\r\n  features.push(feature);\r\n}\r\n\r\nconst source = new VectorSource({ features: features });\r\n\r\nlet honeycombSource = new Honeycomb({\r\n  radius: 40,\r\n  source: source,\r\n});\r\n\r\nconst styleCache = {};\r\nconst colors = [\"#ffa500\", \"blue\", \"red\", \"green\", \"cyan\", \"magenta\", \"yellow\", \"#0f0\"];\r\n//处理style配置\r\nlet honeycombs = new VectorLayer({\r\n  source: honeycombSource,\r\n  style: function(fe) {        \r\n    var size = fe.get('features').length;\r\n    let fillColor = colors[Math.ceil(size /4)] || \"#0f0\";\r\n    var style = styleCache[size];\r\n    if (!style) {\r\n      style = new Style({\r\n        stroke: new Stroke({\r\n          color: '#fff',\r\n          width: 0\r\n        }),\r\n        fill: new Fill({\r\n          color: fillColor\r\n        }),\r\n        text: new Text({\r\n          text: size.toString(),\r\n          fill: new Fill({\r\n            color: '#fff'\r\n          }),\r\n          font: '18px sans-serif'\r\n        })\r\n      });\r\n      styleCache[size] = style;\r\n    }\r\n    return style;\r\n  }\r\n});\r\n\r\n\r\nconst raster = new TileLayer({\r\n  source: new OSM()\r\n});\r\n\r\nlet center = [114.296845, 32];\r\n\r\ncenter = olProj.fromLonLat(center, \"EPSG:3857\");\r\n\r\nwindow.map = new Map({\r\n  layers: [raster, honeycombs],\r\n  target: 'map',\r\n  view: new View({\r\n    center: center,\r\n    maxZoom: 19,\r\n    zoom: 8\r\n  })\r\n});","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n        (opt_callbackParam || 'callback') + '=' + key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () {\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' && typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            }\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length ?\n        opt_canvasPool.shift() :\n        WORKER_OFFSCREEN_CANVAS ?\n            new OffscreenCanvas(opt_width || 300, opt_height || 300) :\n            document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\nimport { IMAGE_DECODE } from './has.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise.then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        }).catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler)\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * @type {number}\n         */\n        this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION + (opt_destinationResolution ?\n            Math.max(0, Math.ceil(Math.log2(getArea(targetExtent) /\n                (opt_destinationResolution * opt_destinationResolution * 256 * 256))))\n            : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0 ? opt_maxResolution :\n        Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        var canUseScreen = typeof screen !== 'undefined';\n        var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n        var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n        var minCacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(Math.max(minCacheSize, options.cacheSize || 0));\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                tileState == TileState.LOADED ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' + _this.apiKey_ +\n            '&c=' + _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight ?\n            resource.imageWidth / scale :\n            [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var z = tileGrid.getZForResolution(viewState.resolution, this.zDirection);\n                var tileCoord = tileGrid.getTileCoordForCoordAndZ(viewState.center, z);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assign } from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = /** @class */ (function (_super) {\n    __extends(CartoDB, _super);\n    /**\n     * @param {Options} options CartoDB options.\n     */\n    function CartoDB(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n            minZoom: options.minZoom,\n            projection: options.projection,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.account_ = options.account;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.mapId_ = options.map || '';\n        /**\n         * @type {!Object}\n         * @private\n         */\n        _this.config_ = options.config || {};\n        /**\n         * @type {!Object<string, CartoDBLayerInfo>}\n         * @private\n         */\n        _this.templateCache_ = {};\n        _this.initializeMap_();\n        return _this;\n    }\n    /**\n     * Returns the current config.\n     * @return {!Object} The current configuration.\n     * @api\n     */\n    CartoDB.prototype.getConfig = function () {\n        return this.config_;\n    };\n    /**\n     * Updates the carto db config.\n     * @param {Object} config a key-value lookup. Values will replace current values\n     *     in the config.\n     * @api\n     */\n    CartoDB.prototype.updateConfig = function (config) {\n        assign(this.config_, config);\n        this.initializeMap_();\n    };\n    /**\n     * Sets the CartoDB config\n     * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n     *     object.\n     * If using named maps, a key-value lookup with the template parameters.\n     * @api\n     */\n    CartoDB.prototype.setConfig = function (config) {\n        this.config_ = config || {};\n        this.initializeMap_();\n    };\n    /**\n     * Issue a request to initialize the CartoDB map.\n     * @private\n     */\n    CartoDB.prototype.initializeMap_ = function () {\n        var paramHash = JSON.stringify(this.config_);\n        if (this.templateCache_[paramHash]) {\n            this.applyTemplate_(this.templateCache_[paramHash]);\n            return;\n        }\n        var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n        if (this.mapId_) {\n            mapUrl += '/named/' + this.mapId_;\n        }\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n        client.addEventListener('error', this.handleInitError_.bind(this));\n        client.open('POST', mapUrl);\n        client.setRequestHeader('Content-type', 'application/json');\n        client.send(JSON.stringify(this.config_));\n    };\n    /**\n     * Handle map initialization response.\n     * @param {string} paramHash a hash representing the parameter set that was used\n     *     for the request\n     * @param {Event} event Event.\n     * @private\n     */\n    CartoDB.prototype.handleInitResponse_ = function (paramHash, event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {CartoDBLayerInfo} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.setState(SourceState.ERROR);\n                return;\n            }\n            this.applyTemplate_(response);\n            this.templateCache_[paramHash] = response;\n            this.setState(SourceState.READY);\n        }\n        else {\n            this.setState(SourceState.ERROR);\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event Event.\n     */\n    CartoDB.prototype.handleInitError_ = function (event) {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * Apply the new tile urls returned by carto db\n     * @param {CartoDBLayerInfo} data Result of carto db call.\n     * @private\n     */\n    CartoDB.prototype.applyTemplate_ = function (data) {\n        var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n            '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n        this.setUrl(tilesUrl);\n    };\n    return CartoDB;\n}(XYZ));\nexport default CartoDB;\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        xhr.withCredentials = withCredentials;\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport RBush_ from 'rbush/rbush.js';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/Cluster\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { scale as scaleCoordinate, add as addCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport { buffer, createEmpty, createOrUpdateFromCoordinate } from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} [source] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nvar Cluster = /** @class */ (function (_super) {\n    __extends(Cluster, _super);\n    /**\n     * @param {Options} options Cluster options.\n     */\n    function Cluster(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {number|undefined}\n         * @protected\n         */\n        _this.resolution = undefined;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.distance = options.distance !== undefined ? options.distance : 20;\n        /**\n         * @type {Array<Feature>}\n         * @protected\n         */\n        _this.features = [];\n        /**\n         * @param {Feature} feature Feature.\n         * @return {Point} Cluster calculation point.\n         * @protected\n         */\n        _this.geometryFunction = options.geometryFunction || function (feature) {\n            var geometry = feature.getGeometry();\n            assert(geometry.getType() == GeometryType.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\n            return geometry;\n        };\n        _this.boundRefresh_ = _this.refresh.bind(_this);\n        _this.setSource(options.source || null);\n        return _this;\n    }\n    /**\n     * @override\n     */\n    Cluster.prototype.clear = function (opt_fast) {\n        this.features.length = 0;\n        _super.prototype.clear.call(this, opt_fast);\n    };\n    /**\n     * Get the distance in pixels between clusters.\n     * @return {number} Distance.\n     * @api\n     */\n    Cluster.prototype.getDistance = function () {\n        return this.distance;\n    };\n    /**\n     * Get a reference to the wrapped source.\n     * @return {VectorSource} Source.\n     * @api\n     */\n    Cluster.prototype.getSource = function () {\n        return this.source;\n    };\n    /**\n     * @inheritDoc\n     */\n    Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\n        this.source.loadFeatures(extent, resolution, projection);\n        if (resolution !== this.resolution) {\n            this.clear();\n            this.resolution = resolution;\n            this.cluster();\n            this.addFeatures(this.features);\n        }\n    };\n    /**\n     * Set the distance in pixels between clusters.\n     * @param {number} distance The distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setDistance = function (distance) {\n        this.distance = distance;\n        this.refresh();\n    };\n    /**\n     * Replace the wrapped source.\n     * @param {VectorSource} source The new source for this instance.\n     * @api\n     */\n    Cluster.prototype.setSource = function (source) {\n        if (this.source) {\n            this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n        }\n        this.source = source;\n        if (source) {\n            source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n        }\n        this.refresh();\n    };\n    /**\n     * Handle the source changing.\n     * @override\n     */\n    Cluster.prototype.refresh = function () {\n        this.clear();\n        this.cluster();\n        this.addFeatures(this.features);\n    };\n    /**\n     * @protected\n     */\n    Cluster.prototype.cluster = function () {\n        if (this.resolution === undefined || !this.source) {\n            return;\n        }\n        var extent = createEmpty();\n        var mapDistance = this.distance * this.resolution;\n        var features = this.source.getFeatures();\n        /**\n         * @type {!Object<string, boolean>}\n         */\n        var clustered = {};\n        for (var i = 0, ii = features.length; i < ii; i++) {\n            var feature = features[i];\n            if (!(getUid(feature) in clustered)) {\n                var geometry = this.geometryFunction(feature);\n                if (geometry) {\n                    var coordinates = geometry.getCoordinates();\n                    createOrUpdateFromCoordinate(coordinates, extent);\n                    buffer(extent, mapDistance, extent);\n                    var neighbors = this.source.getFeaturesInExtent(extent);\n                    neighbors = neighbors.filter(function (neighbor) {\n                        var uid = getUid(neighbor);\n                        if (!(uid in clustered)) {\n                            clustered[uid] = true;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                    this.features.push(this.createCluster(neighbors));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Feature>} features Features\n     * @return {Feature} The cluster feature.\n     * @protected\n     */\n    Cluster.prototype.createCluster = function (features) {\n        var centroid = [0, 0];\n        for (var i = features.length - 1; i >= 0; --i) {\n            var geometry = this.geometryFunction(features[i]);\n            if (geometry) {\n                addCoordinate(centroid, geometry.getCoordinates());\n            }\n            else {\n                features.splice(i, 1);\n            }\n        }\n        scaleCoordinate(centroid, 1 / features.length);\n        var cluster = new Feature(new Point(centroid));\n        cluster.set('features', features);\n        return cluster;\n    };\n    return Cluster;\n}(VectorSource));\nexport default Cluster;\n//# sourceMappingURL=Cluster.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\nimport { getWidth } from './extent.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    var projectionExtent = projection.getExtent();\n    if (projection.canWrapX() && (coordinate[0] < projectionExtent[0] || coordinate[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / worldWidth);\n        coordinate[0] -= (worldsAway * worldWidth);\n    }\n    return coordinate;\n}\n//# sourceMappingURL=coordinate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Zoomify\n */\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { toSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport { getCenter } from '../extent.js';\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n    DEFAULT: 'default',\n    TRUNCATED: 'truncated'\n};\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {import(\"../size.js\").Size} tileSize Full tile size.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"../Tile.js\").Options=} opt_options Tile options.\n     */\n    function CustomTile(tileSize, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.zoomifyImage_ = null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tileSize_ = tileSize;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getImage = function () {\n        if (this.zoomifyImage_) {\n            return this.zoomifyImage_;\n        }\n        var image = _super.prototype.getImage.call(this);\n        if (this.state == TileState.LOADED) {\n            var tileSize = this.tileSize_;\n            if (image.width == tileSize[0] && image.height == tileSize[1]) {\n                this.zoomifyImage_ = image;\n                return image;\n            }\n            else {\n                var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n                context.drawImage(image, 0, 0);\n                this.zoomifyImage_ = context.canvas;\n                return context.canvas;\n            }\n        }\n        else {\n            return image;\n        }\n    };\n    return CustomTile;\n}(ImageTile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} url URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} size\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = /** @class */ (function (_super) {\n    __extends(Zoomify, _super);\n    /**\n     * @param {Options} opt_options Options.\n     */\n    function Zoomify(opt_options) {\n        var _this = this;\n        var options = opt_options;\n        var size = options.size;\n        var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n            options.tierSizeCalculation :\n            TierSizeCalculation.DEFAULT;\n        var tilePixelRatio = options.tilePixelRatio || 1;\n        var imageWidth = size[0];\n        var imageHeight = size[1];\n        var tierSizeInTiles = [];\n        var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n        var tileSizeForTierSizeCalculation = tileSize * tilePixelRatio;\n        switch (tierSizeCalculation) {\n            case TierSizeCalculation.DEFAULT:\n                while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n                        Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n                    ]);\n                    tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n                }\n                break;\n            case TierSizeCalculation.TRUNCATED:\n                var width = imageWidth;\n                var height = imageHeight;\n                while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(width / tileSizeForTierSizeCalculation),\n                        Math.ceil(height / tileSizeForTierSizeCalculation)\n                    ]);\n                    width >>= 1;\n                    height >>= 1;\n                }\n                break;\n            default:\n                assert(false, 53); // Unknown `tierSizeCalculation` configured\n                break;\n        }\n        tierSizeInTiles.push([1, 1]);\n        tierSizeInTiles.reverse();\n        var resolutions = [tilePixelRatio];\n        var tileCountUpToTier = [0];\n        for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n            resolutions.push(tilePixelRatio << i);\n            tileCountUpToTier.push(tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n                tileCountUpToTier[i - 1]);\n        }\n        resolutions.reverse();\n        var tileGrid = new TileGrid({\n            tileSize: tileSize,\n            extent: options.extent || [0, -imageHeight, imageWidth, 0],\n            resolutions: resolutions\n        });\n        var url = options.url;\n        if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n            url += '{TileGroup}/{z}-{x}-{y}.jpg';\n        }\n        var urls = expandUrl(url);\n        var tileWidth = tileSize * tilePixelRatio;\n        /**\n         * @param {string} template Template.\n         * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n         */\n        function createFromTemplate(template) {\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    var tileCoordZ = tileCoord[0];\n                    var tileCoordX = tileCoord[1];\n                    var tileCoordY = tileCoord[2];\n                    var tileIndex = tileCoordX +\n                        tileCoordY * tierSizeInTiles[tileCoordZ][0];\n                    var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n                    var localContext_1 = {\n                        'z': tileCoordZ,\n                        'x': tileCoordX,\n                        'y': tileCoordY,\n                        'tileIndex': tileIndex,\n                        'TileGroup': 'TileGroup' + tileGroup\n                    };\n                    return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n            });\n        }\n        var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n        var ZoomifyTileClass = CustomTile.bind(null, toSize(tileSize * tilePixelRatio));\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            tilePixelRatio: tilePixelRatio,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: ZoomifyTileClass,\n            tileGrid: tileGrid,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        // Server retina tile detection (non-standard):\n        // Try loading the center tile for the highest resolution. If it is not\n        // available, we are dealing with retina tiles, and need to adjust the\n        // tile url calculation.\n        var tileUrl = tileGrid.getTileCoordForCoordAndResolution(getCenter(tileGrid.getExtent()), resolutions[resolutions.length - 1]);\n        var testTileUrl = tileUrlFunction(tileUrl, 1, null);\n        var image = new Image();\n        image.addEventListener('error', function () {\n            tileWidth = tileSize;\n            this.changed();\n        }.bind(_this));\n        image.src = testTileUrl;\n        return _this;\n    }\n    return Zoomify;\n}(TileImage));\nexport default Zoomify;\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/format/IIIFInfo\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n/**\n * @typedef {Object<string,string|number|Array<number|string|IiifProfile>|Object<string, number>|TileInfo>}\n *    ImageInformationResponse\n */\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nvar Versions = {\n    VERSION1: 'version1',\n    VERSION2: 'version2',\n    VERSION3: 'version3'\n};\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nvar IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n    'level0': {\n        supports: [],\n        formats: [],\n        qualities: ['native']\n    },\n    'level1': {\n        supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n        formats: ['jpg'],\n        qualities: ['native']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n            'sizeByConfinedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['native', 'color', 'grey', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n    'level0': {\n        supports: [],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level1': {\n        supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n            'sizeByConfinedWh', 'sizeByDistortedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['default', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n    'level0': {\n        supports: [],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level1': {\n        supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH', 'sizeByWh'],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionSquare', 'regionByPct',\n            'sizeByW', 'sizeByH', 'sizeByPct', 'sizeByConfinedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['default']\n    }\n};\nIIIF_PROFILE_VALUES['none'] = {\n    'none': {\n        supports: [],\n        formats: [],\n        qualities: []\n    }\n};\nvar COMPLIANCE_VERSION1 = new RegExp('^https?\\:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(1\\.1\\/)?compliance\\.html#level[0-2]$');\nvar COMPLIANCE_VERSION2 = new RegExp('^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](\\.json)?$');\nvar COMPLIANCE_VERSION3 = new RegExp('(^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](\\.json)?$)|(^level[0-2]$)');\nfunction generateVersion1Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n    // Version 1.0 and 1.1 do not require a profile.\n    if (levelProfile === undefined) {\n        levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n    }\n    return {\n        url: iiifInfo.imageInfo['@id'] === undefined ? undefined : iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n        supports: levelProfile.supports,\n        formats: levelProfile.formats.concat([iiifInfo.imageInfo.formats === undefined ?\n                [] : iiifInfo.imageInfo.formats]),\n        qualities: levelProfile.qualities.concat([iiifInfo.imageInfo.qualities === undefined ?\n                [] : iiifInfo.imageInfo.qualities]),\n        resolutions: iiifInfo.imageInfo.scale_factors,\n        tileSize: iiifInfo.imageInfo.tile_width !== undefined ? (iiifInfo.imageInfo.tile_height !== undefined ?\n            [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height] : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]) :\n            (iiifInfo.imageInfo.tile_height != undefined ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height] : undefined)\n    };\n}\nfunction generateVersion2Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(), additionalProfile = Array.isArray(iiifInfo.imageInfo.profile) && iiifInfo.imageInfo.profile.length > 1, profileSupports = additionalProfile && iiifInfo.imageInfo.profile[1].supports ? iiifInfo.imageInfo.profile[1].supports : [], profileFormats = additionalProfile && iiifInfo.imageInfo.profile[1].formats ? iiifInfo.imageInfo.profile[1].formats : [], profileQualities = additionalProfile && iiifInfo.imageInfo.profile[1].qualities ? iiifInfo.imageInfo.profile[1].qualities : [];\n    return {\n        url: iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n        sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n        }),\n        tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.height === undefined ? tile.width : tile.height;\n            })[0]\n        ],\n        resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.scaleFactors;\n            })[0],\n        supports: levelProfile.supports.concat(profileSupports),\n        formats: levelProfile.formats.concat(profileFormats),\n        qualities: levelProfile.qualities.concat(profileQualities)\n    };\n}\nfunction generateVersion3Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(), formats = iiifInfo.imageInfo.extraFormats === undefined ? levelProfile.formats : levelProfile.formats.concat(iiifInfo.imageInfo.extraFormats), preferredFormat = iiifInfo.imageInfo.preferredFormats !== undefined && Array.isArray(iiifInfo.imageInfo.preferredFormats) &&\n        iiifInfo.imageInfo.preferredFormats.length > 0 ?\n        iiifInfo.imageInfo.preferredFormats.filter(function (format) {\n            return ['jpg', 'png', 'gif'].includes(format);\n        }).reduce(function (acc, format) {\n            return acc === undefined && formats.includes(format) ? format : acc;\n        }, undefined) : undefined;\n    return {\n        url: iiifInfo.imageInfo['id'],\n        sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n        }),\n        tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.height;\n            })[0]\n        ],\n        resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.scaleFactors;\n            })[0],\n        supports: iiifInfo.imageInfo.extraFeatures === undefined ? levelProfile.supports : levelProfile.supports.concat(iiifInfo.imageInfo.extraFeatures),\n        formats: formats,\n        qualities: iiifInfo.imageInfo.extraQualities === undefined ? levelProfile.qualities : levelProfile.qualities.concat(iiifInfo.imageInfo.extraQualities),\n        preferredFormat: preferredFormat\n    };\n}\nvar versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nvar IIIFInfo = /** @class */ (function () {\n    /**\n     * @param {string|ImageInformationResponse} imageInfo\n     * Deserialized image information JSON response object or JSON response as string\n     */\n    function IIIFInfo(imageInfo) {\n        this.setImageInfo(imageInfo);\n    }\n    /**\n     * @param {string|ImageInformationResponse} imageInfo\n     * Deserialized image information JSON response object or JSON response as string\n     * @api\n     */\n    IIIFInfo.prototype.setImageInfo = function (imageInfo) {\n        if (typeof imageInfo == 'string') {\n            this.imageInfo = JSON.parse(imageInfo);\n        }\n        else {\n            this.imageInfo = imageInfo;\n        }\n    };\n    /**\n     * @returns {Versions} Major IIIF version.\n     * @api\n     */\n    IIIFInfo.prototype.getImageApiVersion = function () {\n        if (this.imageInfo === undefined) {\n            return;\n        }\n        var context = this.imageInfo['@context'] || 'ol-no-context';\n        if (typeof context == 'string') {\n            context = [context];\n        }\n        for (var i = 0; i < context.length; i++) {\n            switch (context[i]) {\n                case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n                case 'http://iiif.io/api/image/1/context.json':\n                    return Versions.VERSION1;\n                case 'http://iiif.io/api/image/2/context.json':\n                    return Versions.VERSION2;\n                case 'http://iiif.io/api/image/3/context.json':\n                    return Versions.VERSION3;\n                case 'ol-no-context':\n                    // Image API 1.0 has no '@context'\n                    if (this.getComplianceLevelEntryFromProfile(Versions.VERSION1) && this.imageInfo.identifier) {\n                        return Versions.VERSION1;\n                    }\n                    break;\n                default:\n            }\n        }\n        assert(false, 61);\n    };\n    /**\n     * @param {Versions} version Optional IIIF image API version\n     * @returns {string} Compliance level as it appears in the IIIF image information\n     * response.\n     */\n    IIIFInfo.prototype.getComplianceLevelEntryFromProfile = function (version) {\n        if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n            return;\n        }\n        if (version === undefined) {\n            version = this.getImageApiVersion();\n        }\n        switch (version) {\n            case Versions.VERSION1:\n                if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                break;\n            case Versions.VERSION3:\n                if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                break;\n            case Versions.VERSION2:\n                if (typeof this.imageInfo.profile === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                if (Array.isArray(this.imageInfo.profile) && this.imageInfo.profile.length > 0\n                    && typeof this.imageInfo.profile[0] === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])) {\n                    return this.imageInfo.profile[0];\n                }\n                break;\n            default:\n        }\n    };\n    /**\n     * @param {Versions} version Optional IIIF image API version\n     * @returns {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n     */\n    IIIFInfo.prototype.getComplianceLevelFromProfile = function (version) {\n        var complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n        if (complianceLevel === undefined) {\n            return undefined;\n        }\n        var level = complianceLevel.match(/level[0-2](\\.json)?$/g);\n        return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n    };\n    /**\n     * @returns {SupportedFeatures} Image formats, qualities and region / size calculation\n     * methods that are supported by the IIIF service.\n     */\n    IIIFInfo.prototype.getComplianceLevelSupportedFeatures = function () {\n        if (this.imageInfo === undefined) {\n            return;\n        }\n        var version = this.getImageApiVersion();\n        var level = this.getComplianceLevelFromProfile(version);\n        if (level === undefined) {\n            return IIIF_PROFILE_VALUES['none']['none'];\n        }\n        return IIIF_PROFILE_VALUES[version][level];\n    };\n    /**\n     * @param {PreferredOptions=} opt_preferredOptions Optional options for preferred format and quality.\n     * @returns {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n     * @api\n     */\n    IIIFInfo.prototype.getTileSourceOptions = function (opt_preferredOptions) {\n        var options = opt_preferredOptions || {}, version = this.getImageApiVersion();\n        if (version === undefined) {\n            return;\n        }\n        var imageOptions = version === undefined ? undefined : versionFunctions[version](this);\n        if (imageOptions === undefined) {\n            return;\n        }\n        return {\n            url: imageOptions.url,\n            version: version,\n            size: [this.imageInfo.width, this.imageInfo.height],\n            sizes: imageOptions.sizes,\n            format: options.format !== undefined && imageOptions.formats.includes(options.format) ? options.format :\n                imageOptions.preferredFormat !== undefined ? imageOptions.preferredFormat : 'jpg',\n            supports: imageOptions.supports,\n            quality: options.quality && imageOptions.qualities.includes(options.quality) ?\n                options.quality : imageOptions.qualities.includes('native') ? 'native' : 'default',\n            resolutions: Array.isArray(imageOptions.resolutions) ? imageOptions.resolutions.sort(function (a, b) {\n                return b - a;\n            }) : undefined,\n            tileSize: imageOptions.tileSize\n        };\n    };\n    return IIIFInfo;\n}());\nexport default IIIFInfo;\nexport { Versions };\n//# sourceMappingURL=IIIFInfo.js.map","/**\n * @module ol/source/IIIF\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport { getTopLeft } from '../extent.js';\nimport { CustomTile } from './Zoomify.js';\nimport { Versions } from '../format/IIIFInfo.js';\nimport { assert } from '../asserts.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {null|string} [crossOrigin]\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]]\n * @property {string} [format='jpg'] Requested image format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Array<number>} [resolutions] Supported resolutions as given in IIIF 'scaleFactors'\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {Array<import(\"../size.js\").Size>} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio]\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition]\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image ID.\n * @property {Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\nfunction formatPercentage(percentage) {\n    return percentage.toLocaleString('en', { maximumFractionDigits: 10 });\n}\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nvar IIIF = /** @class */ (function (_super) {\n    __extends(IIIF, _super);\n    /**\n     * @param {Options=} opt_options Tile source options. Use {@link import(\"../format/IIIFInfo.js\").IIIFInfo}\n     * to parse Image API service information responses into constructor options.\n     * @api\n     */\n    function IIIF(opt_options) {\n        var _this = this;\n        /**\n         * @type {Partial<Options>}\n         */\n        var options = opt_options || {};\n        var baseUrl = options.url || '';\n        baseUrl = baseUrl + (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === '' ? '' : '/');\n        var version = options.version || Versions.VERSION2;\n        var sizes = options.sizes || [];\n        var size = options.size;\n        assert(size != undefined && Array.isArray(size) && size.length == 2 &&\n            !isNaN(size[0]) && size[0] > 0 && !isNaN(size[1]) && size[1] > 0, 60);\n        var width = size[0];\n        var height = size[1];\n        var tileSize = options.tileSize;\n        var tilePixelRatio = options.tilePixelRatio || 1;\n        var format = options.format || 'jpg';\n        var quality = options.quality || (options.version == Versions.VERSION1 ? 'native' : 'default');\n        var resolutions = options.resolutions || [];\n        var supports = options.supports || [];\n        var extent = options.extent || [0, -height, width, 0];\n        var supportsListedSizes = sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n        var supportsListedTiles = tileSize !== undefined && (typeof tileSize === 'number' && Number.isInteger(tileSize) && tileSize > 0 || Array.isArray(tileSize) && tileSize.length > 0);\n        var supportsArbitraryTiling = supports != undefined && Array.isArray(supports) &&\n            (supports.includes('regionByPx') || supports.includes('regionByPct')) &&\n            (supports.includes('sizeByWh') || supports.includes('sizeByH') ||\n                supports.includes('sizeByW') || supports.includes('sizeByPct'));\n        var tileWidth, tileHeight, maxZoom;\n        resolutions.sort(function (a, b) {\n            return b - a;\n        });\n        if (supportsListedTiles || supportsArbitraryTiling) {\n            if (tileSize != undefined) {\n                if (typeof tileSize === 'number' && Number.isInteger(tileSize) && tileSize > 0) {\n                    tileWidth = tileSize;\n                    tileHeight = tileSize;\n                }\n                else if (Array.isArray(tileSize) && tileSize.length > 0) {\n                    if (tileSize.length == 1 || tileSize[1] == undefined && Number.isInteger(tileSize[0])) {\n                        tileWidth = tileSize[0];\n                        tileHeight = tileSize[0];\n                    }\n                    if (tileSize.length == 2) {\n                        if (Number.isInteger(tileSize[0]) && Number.isInteger(tileSize[1])) {\n                            tileWidth = tileSize[0];\n                            tileHeight = tileSize[1];\n                        }\n                        else if (tileSize[0] == undefined && Number.isInteger(tileSize[1])) {\n                            tileWidth = tileSize[1];\n                            tileHeight = tileSize[1];\n                        }\n                    }\n                }\n            }\n            if (tileWidth === undefined || tileHeight === undefined) {\n                tileWidth = DEFAULT_TILE_SIZE;\n                tileHeight = DEFAULT_TILE_SIZE;\n            }\n            if (resolutions.length == 0) {\n                maxZoom = Math.max(Math.ceil(Math.log(width / tileWidth) / Math.LN2), Math.ceil(Math.log(height / tileHeight) / Math.LN2));\n                for (var i = maxZoom; i >= 0; i--) {\n                    resolutions.push(Math.pow(2, i));\n                }\n            }\n            else {\n                var maxScaleFactor = Math.max.apply(Math, resolutions);\n                // TODO maxScaleFactor might not be a power to 2\n                maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n            }\n        }\n        else {\n            // No tile support.\n            tileWidth = width;\n            tileHeight = height;\n            resolutions = [];\n            if (supportsListedSizes) {\n                /*\n                 * 'sizes' provided. Use full region in different resolutions. Every\n                 * resolution has only one tile.\n                 */\n                sizes.sort(function (a, b) {\n                    return a[0] - b[0];\n                });\n                maxZoom = -1;\n                var ignoredSizesIndex = [];\n                for (var i = 0; i < sizes.length; i++) {\n                    var resolution = width / sizes[i][0];\n                    if (resolutions.length > 0 && resolutions[resolutions.length - 1] == resolution) {\n                        ignoredSizesIndex.push(i);\n                        continue;\n                    }\n                    resolutions.push(resolution);\n                    maxZoom++;\n                }\n                if (ignoredSizesIndex.length > 0) {\n                    for (var i = 0; i < ignoredSizesIndex.length; i++) {\n                        sizes.splice(ignoredSizesIndex[i] - i, 1);\n                    }\n                }\n            }\n            else {\n                // No useful image information at all. Try pseudo tile with full image.\n                resolutions.push(1);\n                sizes.push([width, height]);\n                maxZoom = 0;\n            }\n        }\n        var tileGrid = new TileGrid({\n            tileSize: [tileWidth, tileHeight],\n            extent: extent,\n            origin: getTopLeft(extent),\n            resolutions: resolutions\n        });\n        var tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n            var regionParam, sizeParam;\n            var zoom = tileCoord[0];\n            if (zoom > maxZoom) {\n                return;\n            }\n            var tileX = tileCoord[1], tileY = tileCoord[2], scale = resolutions[zoom];\n            if (tileX === undefined || tileY === undefined || scale === undefined ||\n                tileX < 0 || Math.ceil(width / scale / tileWidth) <= tileX ||\n                tileY < 0 || Math.ceil(height / scale / tileHeight) <= tileY) {\n                return;\n            }\n            if (supportsArbitraryTiling || supportsListedTiles) {\n                var regionX = tileX * tileWidth * scale, regionY = tileY * tileHeight * scale;\n                var regionW = tileWidth * scale, regionH = tileHeight * scale, sizeW = tileWidth, sizeH = tileHeight;\n                if (regionX + regionW > width) {\n                    regionW = width - regionX;\n                }\n                if (regionY + regionH > height) {\n                    regionH = height - regionY;\n                }\n                if (regionX + tileWidth * scale > width) {\n                    sizeW = Math.floor((width - regionX + scale - 1) / scale);\n                }\n                if (regionY + tileHeight * scale > height) {\n                    sizeH = Math.floor((height - regionY + scale - 1) / scale);\n                }\n                if (regionX == 0 && regionW == width && regionY == 0 && regionH == height) {\n                    // canonical full image region parameter is 'full', not 'x,y,w,h'\n                    regionParam = 'full';\n                }\n                else if (!supportsArbitraryTiling || supports.includes('regionByPx')) {\n                    regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n                }\n                else if (supports.includes('regionByPct')) {\n                    var pctX = formatPercentage(regionX / width * 100), pctY = formatPercentage(regionY / height * 100), pctW = formatPercentage(regionW / width * 100), pctH = formatPercentage(regionH / height * 100);\n                    regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n                }\n                if (version == Versions.VERSION3 && (!supportsArbitraryTiling || supports.includes('sizeByWh'))) {\n                    sizeParam = sizeW + ',' + sizeH;\n                }\n                else if (!supportsArbitraryTiling || supports.includes('sizeByW')) {\n                    sizeParam = sizeW + ',';\n                }\n                else if (supports.includes('sizeByH')) {\n                    sizeParam = ',' + sizeH;\n                }\n                else if (supports.includes('sizeByWh')) {\n                    sizeParam = sizeW + ',' + sizeH;\n                }\n                else if (supports.includes('sizeByPct')) {\n                    sizeParam = 'pct:' + formatPercentage(100 / scale);\n                }\n            }\n            else {\n                regionParam = 'full';\n                if (supportsListedSizes) {\n                    var regionWidth = sizes[zoom][0], regionHeight = sizes[zoom][1];\n                    if (version == Versions.VERSION3) {\n                        if (regionWidth == width && regionHeight == height) {\n                            sizeParam = 'max';\n                        }\n                        else {\n                            sizeParam = regionWidth + ',' + regionHeight;\n                        }\n                    }\n                    else {\n                        if (regionWidth == width) {\n                            sizeParam = 'full';\n                        }\n                        else {\n                            sizeParam = regionWidth + ',';\n                        }\n                    }\n                }\n                else {\n                    sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n                }\n            }\n            return baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format;\n        };\n        var IiifTileClass = CustomTile.bind(null, toSize(tileSize || 256).map(function (size) {\n            return size * tilePixelRatio;\n        }));\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: options.state,\n            tileClass: IiifTileClass,\n            tileGrid: tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        return _this;\n    }\n    return IIIF;\n}(TileImage));\nexport default IIIF;\n//# sourceMappingURL=IIIF.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getCenter, getIntersection, getHeight, getWidth } from '../extent.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage()\n                }], 0);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport { abstract } from '../util.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport { linearFindNearest } from '../array.js';\nimport Event from '../events/Event.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ = options.resolutions !== undefined ?\n            options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     * @override\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this));\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = /** @class */ (function (_super) {\n    __extends(ImageArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Image ArcGIS Rest Options.\n     */\n    function ImageArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageArcGISRest.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        var params = {\n            'F': 'image',\n            'FORMAT': 'PNG32',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        extent = extent.slice();\n        var centerX = (extent[0] + extent[2]) / 2;\n        var centerY = (extent[1] + extent[3]) / 2;\n        if (this.ratio_ != 1) {\n            var halfWidth = this.ratio_ * getWidth(extent) / 2;\n            var halfHeight = this.ratio_ * getHeight(extent) / 2;\n            extent[0] = centerX - halfWidth;\n            extent[1] = centerY - halfHeight;\n            extent[2] = centerX + halfWidth;\n            extent[3] = centerY + halfHeight;\n        }\n        var imageResolution = resolution / pixelRatio;\n        // Compute an integer width and height.\n        var width = Math.ceil(getWidth(extent) / imageResolution);\n        var height = Math.ceil(getHeight(extent) / imageResolution);\n        // Modify the extent to match the integer width and height.\n        extent[0] = centerX - imageResolution * width / 2;\n        extent[2] = centerX + imageResolution * width / 2;\n        extent[1] = centerY - imageResolution * height / 2;\n        extent[3] = centerY + imageResolution * height / 2;\n        this.imageSize_[0] = width;\n        this.imageSize_[1] = height;\n        var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(extent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageArcGISRest.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = size[0] + ',' + size[1];\n        params['BBOX'] = extent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(90 * pixelRatio);\n        var url = this.url_;\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        if (modifiedUrl == url) {\n            assert(false, 50); // `options.featureTypes` should be an Array\n        }\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * Return the URL used for this ArcGIS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.image_ = null;\n        this.changed();\n    };\n    return ImageArcGISRest;\n}(ImageSource));\nexport default ImageArcGISRest;\n//# sourceMappingURL=ImageArcGISRest.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\nvar ImageCanvas = /** @class */ (function (_super) {\n    __extends(ImageCanvas, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {HTMLCanvasElement} canvas Canvas.\n     * @param {Loader=} opt_loader Optional loader function to\n     *     support asynchronous canvas drawing.\n     */\n    function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n        var _this = this;\n        var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n        /**\n         * Optional canvas loader function.\n         * @type {?Loader}\n         * @private\n         */\n        _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = canvas;\n        /**\n         * @private\n         * @type {?Error}\n         */\n        _this.error_ = null;\n        return _this;\n    }\n    /**\n     * Get any error associated with asynchronous rendering.\n     * @return {?Error} Any error that occurred during rendering.\n     */\n    ImageCanvas.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Handle async drawing complete.\n     * @param {Error=} err Any error during drawing.\n     * @private\n     */\n    ImageCanvas.prototype.handleLoad_ = function (err) {\n        if (err) {\n            this.error_ = err;\n            this.state = ImageState.ERROR;\n        }\n        else {\n            this.state = ImageState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCanvas.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.loader_(this.handleLoad_.bind(this));\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas element.\n     */\n    ImageCanvas.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    return ImageCanvas;\n}(ImageBase));\nexport default ImageCanvas;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageCanvas\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageCanvas from '../ImageCanvas.js';\nimport { containsExtent, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport ImageSource from './Image.js';\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = /** @class */ (function (_super) {\n    __extends(ImageCanvasSource, _super);\n    /**\n     * @param {Options=} opt_options ImageCanvas options.\n     */\n    function ImageCanvasSource(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions,\n            state: options.state\n        }) || this;\n        /**\n        * @private\n        * @type {FunctionType}\n        */\n        _this.canvasFunction_ = options.canvasFunction;\n        /**\n        * @private\n        * @type {import(\"../ImageCanvas.js\").default}\n        */\n        _this.canvas_ = null;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.renderedRevision_ = 0;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.ratio_ = options.ratio !== undefined ?\n            options.ratio : 1.5;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    ImageCanvasSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        var canvas = this.canvas_;\n        if (canvas &&\n            this.renderedRevision_ == this.getRevision() &&\n            canvas.getResolution() == resolution &&\n            canvas.getPixelRatio() == pixelRatio &&\n            containsExtent(canvas.getExtent(), extent)) {\n            return canvas;\n        }\n        extent = extent.slice();\n        scaleFromCenter(extent, this.ratio_);\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        var canvasElement = this.canvasFunction_.call(this, extent, resolution, pixelRatio, size, projection);\n        if (canvasElement) {\n            canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n        }\n        this.canvas_ = canvas;\n        this.renderedRevision_ = this.getRevision();\n        return canvas;\n    };\n    return ImageCanvasSource;\n}(ImageSource));\nexport default ImageCanvasSource;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = /** @class */ (function (_super) {\n    __extends(ImageMapGuide, _super);\n    /**\n     * @param {Options} options ImageMapGuide options.\n     */\n    function ImageMapGuide(options) {\n        var _this = _super.call(this, {\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.displayDpi_ = options.displayDpi !== undefined ?\n            options.displayDpi : 96;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n            options.metersPerUnit : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useOverlay_ = options.useOverlay !== undefined ?\n            options.useOverlay : false;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageMapGuide.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageMapGuide.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        if (this.ratio_ != 1) {\n            extent = extent.slice();\n            scaleFromCenter(extent, this.ratio_);\n        }\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        if (this.url_ !== undefined) {\n            var imageUrl = this.getUrl(this.url_, this.params_, extent, size, projection);\n            image = new ImageWrapper(extent, resolution, pixelRatio, imageUrl, this.crossOrigin_, this.imageLoadFunction_);\n            image.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n        }\n        else {\n            image = null;\n        }\n        this.image_ = image;\n        this.renderedRevision_ = this.getRevision();\n        return image;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageMapGuide.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.changed();\n    };\n    /**\n     * @param {string} baseUrl The mapagent url.\n     * @param {Object<string, string|number>} params Request parameters.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string} The mapagent map image request URL.\n     */\n    ImageMapGuide.prototype.getUrl = function (baseUrl, params, extent, size, projection) {\n        var scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\n        var center = getCenter(extent);\n        var baseParams = {\n            'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n            'VERSION': '2.0.0',\n            'LOCALE': 'en',\n            'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n            'CLIP': '1',\n            'SETDISPLAYDPI': this.displayDpi_,\n            'SETDISPLAYWIDTH': Math.round(size[0]),\n            'SETDISPLAYHEIGHT': Math.round(size[1]),\n            'SETVIEWSCALE': scale,\n            'SETVIEWCENTERX': center[0],\n            'SETVIEWCENTERY': center[1]\n        };\n        assign(baseParams, params);\n        return appendParams(baseUrl, baseParams);\n    };\n    /**\n     * Set the image load function of the MapGuide source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    return ImageMapGuide;\n}(ImageSource));\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n    var mcsW = getWidth(extent);\n    var mcsH = getHeight(extent);\n    var devW = size[0];\n    var devH = size[1];\n    var mpp = 0.0254 / dpi;\n    if (devH * mcsW > devW * mcsH) {\n        return mcsW * metersPerUnit / (devW * mpp); // width limited\n    }\n    else {\n        return mcsH * metersPerUnit / (devH * mpp); // height limited\n    }\n}\nexport default ImageMapGuide;\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport { intersects, getHeight, getWidth } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /** @class */ (function (_super) {\n    __extends(Static, _super);\n    /**\n     * @param {Options} options ImageStatic options.\n     */\n    function Static(options) {\n        var _this = this;\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : null;\n        var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: getProjection(options.projection)\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.imageExtent_ = options.imageExtent;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = options.imageSize ? options.imageSize : null;\n        _this.image_.addEventListener(EventType.CHANGE, _this.handleImageChange.bind(_this));\n        return _this;\n    }\n    /**\n     * Returns the image extent\n     * @return {import(\"../extent.js\").Extent} image extent.\n     * @api\n     */\n    Static.prototype.getImageExtent = function () {\n        return this.imageExtent_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (intersects(extent, this.image_.getExtent())) {\n            return this.image_;\n        }\n        return null;\n    };\n    /**\n     * Return the URL used for this image source.\n     * @return {string} URL.\n     * @api\n     */\n    Static.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.handleImageChange = function (evt) {\n        if (this.image_.getState() == ImageState.LOADED) {\n            var imageExtent = this.image_.getExtent();\n            var image = this.image_.getImage();\n            var imageWidth = void 0, imageHeight = void 0;\n            if (this.imageSize_) {\n                imageWidth = this.imageSize_[0];\n                imageHeight = this.imageSize_[1];\n            }\n            else {\n                imageWidth = image.width;\n                imageHeight = image.height;\n            }\n            var resolution = getHeight(imageExtent) / imageHeight;\n            var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n            if (targetWidth != imageWidth) {\n                var context = createCanvasContext2D(targetWidth, imageHeight);\n                var canvas = context.canvas;\n                context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n                this.image_.setImage(canvas);\n            }\n        }\n        _super.prototype.handleImageChange.call(this, evt);\n    };\n    return Static;\n}(ImageSource));\nexport default Static;\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    /**\n     * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n     * @api\n     */\n    CARMENTA_SERVER: 'carmentaserver',\n    /**\n     * HiDPI support for [GeoServer](https://geoserver.org/)\n     * @api\n     */\n    GEOSERVER: 'geoserver',\n    /**\n     * HiDPI support for [MapServer](https://mapserver.org/)\n     * @api\n     */\n    MAPSERVER: 'mapserver',\n    /**\n     * HiDPI support for [QGIS](https://qgis.org/)\n     * @api\n     */\n    QGIS: 'qgis'\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, transform } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Return the GetLegendGraphic URL, optionally optimized for the passed\n     * resolution and possibly including any passed specific parameters. Returns\n     * `undefined` if the GetLegendGraphic URL cannot be constructed.\n     *\n     * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n     *     will not be calculated and included in URL.\n     * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n     *     request is generated for this wms layer, else it will try to use the\n     *     configured wms layer. Default `FORMAT` is `image/png`.\n     *     `VERSION` should not be specified here.\n     * @return {string|undefined} GetLegendGraphic URL.\n     * @api\n     */\n    ImageWMS.prototype.getLegendUrl = function (resolution, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetLegendGraphic',\n            'FORMAT': 'image/png'\n        };\n        if (params === undefined || params['LAYER'] === undefined) {\n            var layers = this.params_.LAYERS;\n            var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n            if (!isSingleLayer) {\n                return undefined;\n            }\n            baseParams['LAYER'] = layers;\n        }\n        if (resolution !== undefined) {\n            var mpu = this.getProjection() ? this.getProjection().getMetersPerUnit() : 1;\n            var dpi = 25.4 / 0.28;\n            var inchesPerMeter = 39.37;\n            baseParams['SCALE'] = resolution * mpu * inchesPerMeter * dpi;\n        }\n        assign(baseParams, params);\n        return appendParams(/** @type {string} */ (this.url_), baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [viewWidth, viewHeight]);\n        var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n        var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [requestWidth, requestHeight]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed\n        });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = zIndex !== undefined ? zIndex : (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$'\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family'\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal'\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontParameters } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    var heights = textHeights;\n    return function (fontSpec) {\n        var height = heights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight)) ? 1.2 : Number(font.lineHeight);\n                textHeights[fontSpec] = lineHeight * (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                heights[fontSpec] = height;\n                document.body.removeChild(div);\n            }\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if (( /** @type {*} */(labelOrImage).contextInstructions)) {\n        // label\n        context.translate(x, y);\n        context.scale(scale, scale);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else {\n        // image\n        context.drawImage(/** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale, h * scale);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @private\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target && target.style.opacity === '' && target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context && context.canvas.style.transform === transform) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { compose as composeTransform, makeInverse } from '../../transform.js';\nimport { createTransformString } from '../../render/canvas.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image && this.loadImage(image)) {\n                    this.image_ = image;\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = size_1;\n            height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            clipped = !containsExtent(layerExtent, frameState.extent) && intersects(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform_, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n        this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = this.context.globalAlpha;\n                this.context.globalAlpha = opacity;\n            }\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                this.context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport { fromUserExtent } from '../../proj.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse } from '../../transform.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createTransformString } from '../../render/canvas.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Raster\n */\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { Processor } from 'pixelworks/lib/index.js';\nimport { equals, getCenter, getHeight, getWidth } from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport { assign } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport ImageSource from './Image.js';\nimport TileSource from './Tile.js';\nimport SourceState from './State.js';\nimport Source from './Source.js';\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n    /**\n     * Triggered before operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n     * @api\n     */\n    BEFOREOPERATIONS: 'beforeoperations',\n    /**\n     * Triggered after operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n     * @api\n     */\n    AFTEROPERATIONS: 'afteroperations'\n};\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n    PIXEL: 'pixel',\n    IMAGE: 'image'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = /** @class */ (function (_super) {\n    __extends(RasterSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Object} data An object made available to operations.\n     */\n    function RasterSourceEvent(type, frameState, data) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The raster extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = frameState.extent;\n        /**\n         * The pixel resolution (map units per pixel).\n         * @type {number}\n         * @api\n         */\n        _this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n        /**\n         * An object made available to all operations.  This can be used by operations\n         * as a storage object (e.g. for calculating statistics).\n         * @type {Object}\n         * @api\n         */\n        _this.data = data;\n        return _this;\n    }\n    return RasterSourceEvent;\n}(Event));\nexport { RasterSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nvar RasterSource = /** @class */ (function (_super) {\n    __extends(RasterSource, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RasterSource(options) {\n        var _this = _super.call(this, {\n            projection: null\n        }) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.worker_ = null;\n        /**\n         * @private\n         * @type {RasterOperationType}\n         */\n        _this.operationType_ = options.operationType !== undefined ?\n            options.operationType : RasterOperationType.PIXEL;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threads_ = options.threads !== undefined ? options.threads : 1;\n        /**\n         * @private\n         * @type {Array<import(\"../layer/Layer.js\").default>}\n         */\n        _this.layers_ = createLayers(options.sources);\n        var changed = _this.changed.bind(_this);\n        for (var i = 0, ii = _this.layers_.length; i < ii; ++i) {\n            _this.layers_[i].addEventListener(EventType.CHANGE, changed);\n        }\n        /**\n         * @private\n         * @type {import(\"../TileQueue.js\").default}\n         */\n        _this.tileQueue_ = new TileQueue(function () {\n            return 1;\n        }, _this.changed.bind(_this));\n        /**\n         * The most recently requested frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         * @private\n         */\n        _this.requestedFrameState_;\n        /**\n         * The most recently rendered image canvas.\n         * @type {import(\"../ImageCanvas.js\").default}\n         * @private\n         */\n        _this.renderedImageCanvas_ = null;\n        /**\n         * The most recently rendered revision.\n         * @type {number}\n         */\n        _this.renderedRevision_;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         */\n        _this.frameState_ = {\n            animate: false,\n            coordinateToPixelTransform: createTransform(),\n            extent: null,\n            index: 0,\n            layerIndex: 0,\n            layerStatesArray: getLayerStatesArray(_this.layers_),\n            pixelRatio: 1,\n            pixelToCoordinateTransform: createTransform(),\n            postRenderFunctions: [],\n            size: [0, 0],\n            tileQueue: _this.tileQueue_,\n            time: Date.now(),\n            usedTiles: {},\n            viewState: /** @type {import(\"../View.js\").State} */ ({\n                rotation: 0\n            }),\n            viewHints: [],\n            wantedTiles: {},\n            declutterItems: []\n        };\n        _this.setAttributions(function (frameState) {\n            var attributions = [];\n            for (var index = 0, iMax = options.sources.length; index < iMax; ++index) {\n                var sourceOrLayer = options.sources[index];\n                var source = sourceOrLayer instanceof Source ? sourceOrLayer : sourceOrLayer.getSource();\n                var attributionGetter = source.getAttributions();\n                if (typeof attributionGetter === 'function') {\n                    var sourceAttribution = attributionGetter(frameState);\n                    attributions.push.apply(attributions, sourceAttribution);\n                }\n            }\n            return attributions.length !== 0 ? attributions : null;\n        });\n        if (options.operation !== undefined) {\n            _this.setOperation(options.operation, options.lib);\n        }\n        return _this;\n    }\n    /**\n     * Set the operation.\n     * @param {Operation} operation New operation.\n     * @param {Object=} opt_lib Functions that will be available to operations run\n     *     in a worker.\n     * @api\n     */\n    RasterSource.prototype.setOperation = function (operation, opt_lib) {\n        this.worker_ = new Processor({\n            operation: operation,\n            imageOps: this.operationType_ === RasterOperationType.IMAGE,\n            queue: 1,\n            lib: opt_lib,\n            threads: this.threads_\n        });\n        this.changed();\n    };\n    /**\n     * Update the stored frame state.\n     * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n     * @param {number} resolution The view resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n     * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n     * @private\n     */\n    RasterSource.prototype.updateFrameState_ = function (extent, resolution, projection) {\n        var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n        frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n        var center = getCenter(extent);\n        frameState.extent = extent.slice();\n        frameState.size[0] = Math.round(getWidth(extent) / resolution);\n        frameState.size[1] = Math.round(getHeight(extent) / resolution);\n        frameState.time = Infinity;\n        var viewState = frameState.viewState;\n        viewState.center = center;\n        viewState.projection = projection;\n        viewState.resolution = resolution;\n        return frameState;\n    };\n    /**\n     * Determine if all sources are ready.\n     * @return {boolean} All sources are ready.\n     * @private\n     */\n    RasterSource.prototype.allSourcesReady_ = function () {\n        var ready = true;\n        var source;\n        for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\n            source = this.layers_[i].getSource();\n            if (source.getState() !== SourceState.READY) {\n                ready = false;\n                break;\n            }\n        }\n        return ready;\n    };\n    /**\n     * @inheritDoc\n     */\n    RasterSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        if (!this.allSourcesReady_()) {\n            return null;\n        }\n        var frameState = this.updateFrameState_(extent, resolution, projection);\n        this.requestedFrameState_ = frameState;\n        // check if we can't reuse the existing ol/ImageCanvas\n        if (this.renderedImageCanvas_) {\n            var renderedResolution = this.renderedImageCanvas_.getResolution();\n            var renderedExtent = this.renderedImageCanvas_.getExtent();\n            if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n                this.renderedImageCanvas_ = null;\n            }\n        }\n        if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n            this.processSources_();\n        }\n        frameState.tileQueue.loadMoreTiles(16, 16);\n        if (frameState.animate) {\n            requestAnimationFrame(this.changed.bind(this));\n        }\n        return this.renderedImageCanvas_;\n    };\n    /**\n     * Start processing source data.\n     * @private\n     */\n    RasterSource.prototype.processSources_ = function () {\n        var frameState = this.requestedFrameState_;\n        var len = this.layers_.length;\n        var imageDatas = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            frameState.layerIndex = i;\n            var imageData = getImageData(this.layers_[i], frameState);\n            if (imageData) {\n                imageDatas[i] = imageData;\n            }\n            else {\n                return;\n            }\n        }\n        var data = {};\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n        this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n    };\n    /**\n     * Called when pixel processing is complete.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Error} err Any error during processing.\n     * @param {ImageData} output The output image data.\n     * @param {Object} data The user data.\n     * @private\n     */\n    RasterSource.prototype.onWorkerComplete_ = function (frameState, err, output, data) {\n        if (err || !output) {\n            return;\n        }\n        // do nothing if extent or resolution changed\n        var extent = frameState.extent;\n        var resolution = frameState.viewState.resolution;\n        if (resolution !== this.requestedFrameState_.viewState.resolution ||\n            !equals(extent, this.requestedFrameState_.extent)) {\n            return;\n        }\n        var context;\n        if (this.renderedImageCanvas_) {\n            context = this.renderedImageCanvas_.getImage().getContext('2d');\n        }\n        else {\n            var width = Math.round(getWidth(extent) / resolution);\n            var height = Math.round(getHeight(extent) / resolution);\n            context = createCanvasContext2D(width, height);\n            this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n        }\n        context.putImageData(output, 0, 0);\n        this.changed();\n        this.renderedRevision_ = this.getRevision();\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n    };\n    /**\n     * @override\n     */\n    RasterSource.prototype.getImageInternal = function () {\n        return null; // not implemented\n    };\n    return RasterSource;\n}(ImageSource));\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState) {\n    var renderer = layer.getRenderer();\n    if (!renderer) {\n        throw new Error('Unsupported layer type: ' + layer);\n    }\n    if (!renderer.prepareFrame(frameState)) {\n        return null;\n    }\n    var width = frameState.size[0];\n    var height = frameState.size[1];\n    var container = renderer.renderFrame(frameState, null);\n    var element;\n    if (container) {\n        element = container.firstElementChild;\n    }\n    if (!(element instanceof HTMLCanvasElement)) {\n        throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n        var context = element.getContext('2d');\n        return context.getImageData(0, 0, width, height);\n    }\n    if (!sharedContext) {\n        sharedContext = createCanvasContext2D(width, height);\n    }\n    else {\n        var canvas = sharedContext.canvas;\n        if (canvas.width !== width || canvas.height !== height) {\n            sharedContext = createCanvasContext2D(width, height);\n        }\n        else {\n            sharedContext.clearRect(0, 0, width, height);\n        }\n    }\n    sharedContext.drawImage(element, 0, 0, width, height);\n    return sharedContext.getImageData(0, 0, width, height);\n}\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n    return layers.map(function (layer) {\n        return layer.getLayerState();\n    });\n}\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n    var len = sources.length;\n    var layers = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        layers[i] = createLayer(sources[i]);\n    }\n    return layers;\n}\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n    // @type {import(\"../layer/Layer.js\").default}\n    var layer;\n    if (layerOrSource instanceof Source) {\n        if (layerOrSource instanceof TileSource) {\n            layer = new TileLayer({ source: layerOrSource });\n        }\n        else if (layerOrSource instanceof ImageSource) {\n            layer = new ImageLayer({ source: layerOrSource });\n        }\n    }\n    else {\n        layer = layerOrSource;\n    }\n    return layer;\n}\nexport default RasterSource;\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\nimport XYZ from './XYZ.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n    'Map tiles by <a href=\"https://stamen.com/\" target=\"_blank\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">CC BY' +\n        ' 3.0</a>.',\n    OSM_ATTRIBUTION\n];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n    'terrain': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-background': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'terrain-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-background': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner-hybrid': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lite': {\n        extension: 'png',\n        opaque: true\n    },\n    'watercolor': {\n        extension: 'jpg',\n        opaque: true\n    }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n    'terrain': {\n        minZoom: 0,\n        maxZoom: 18\n    },\n    'toner': {\n        minZoom: 0,\n        maxZoom: 20\n    },\n    'watercolor': {\n        minZoom: 0,\n        maxZoom: 18\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */ (function (_super) {\n    __extends(Stamen, _super);\n    /**\n     * @param {Options} options Stamen options.\n     */\n    function Stamen(options) {\n        var _this = this;\n        var i = options.layer.indexOf('-');\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n        var providerConfig = ProviderConfig[provider];\n        var layerConfig = LayerConfig[options.layer];\n        var url = options.url !== undefined ? options.url :\n            'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n                '/{z}/{x}/{y}.' + layerConfig.extension;\n        _this = _super.call(this, {\n            attributions: ATTRIBUTIONS,\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n            opaque: layerConfig.opaque,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX\n        }) || this;\n        return _this;\n    }\n    return Stamen;\n}(XYZ));\nexport default Stamen;\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createEmpty } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { assign } from '../obj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /** @class */ (function (_super) {\n    __extends(TileArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Tile ArcGIS Rest options.\n     */\n    function TileArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileArcGISRest.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileArcGISRest.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n        params['BBOX'] = tileExtent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio);\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileArcGISRest.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.hidpi_ ? /** @type {number} */ (pixelRatio) : 1;\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.setKey(this.getKeyForParams_());\n    };\n    return TileArcGISRest;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    if (pixelRatio != 1 && !this.hidpi_) {\n        pixelRatio = 1;\n    }\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    // Apply default params and override with user specified values.\n    var baseParams = {\n        'F': 'image',\n        'FORMAT': 'PNG32',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileArcGISRest;\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { toSize } from '../size.js';\nimport XYZ from './XYZ.js';\nimport { getKeyZXY } from '../tilecoord.js';\nvar LabeledTile = /** @class */ (function (_super) {\n    __extends(LabeledTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {string} text Text.\n     */\n    function LabeledTile(tileCoord, tileSize, text) {\n        var _this = _super.call(this, tileCoord, TileState.LOADED) || this;\n        /**\n        * @private\n        * @type {import(\"../size.js\").Size}\n        */\n        _this.tileSize_ = tileSize;\n        /**\n        * @private\n        * @type {string}\n        */\n        _this.text_ = text;\n        /**\n        * @private\n        * @type {HTMLCanvasElement}\n        */\n        _this.canvas_ = null;\n        return _this;\n    }\n    /**\n    * Get the image element for this tile.\n    * @return {HTMLCanvasElement} Image.\n    */\n    LabeledTile.prototype.getImage = function () {\n        if (this.canvas_) {\n            return this.canvas_;\n        }\n        else {\n            var tileSize = this.tileSize_;\n            var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n            context.strokeStyle = 'grey';\n            context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n            context.fillStyle = 'grey';\n            context.strokeStyle = 'white';\n            context.textAlign = 'center';\n            context.textBaseline = 'middle';\n            context.font = '24px sans-serif';\n            context.lineWidth = 4;\n            context.strokeText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            this.canvas_ = context.canvas;\n            return context.canvas;\n        }\n    };\n    /**\n    * @override\n    */\n    LabeledTile.prototype.load = function () { };\n    return LabeledTile;\n}(Tile));\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [zDirection=0] Set to `1` when debugging `VectorTile` sources with\n * a default configuration. Indicates which resolution should be used by a renderer if\n * the view resolution does not match any resolution of the tile source. If 0, the nearest\n * resolution will be used. If 1, the nearest lower resolution will be used. If -1, the\n * nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = /** @class */ (function (_super) {\n    __extends(TileDebug, _super);\n    /**\n     * @param {Options=} opt_options Debug tile options.\n     */\n    function TileDebug(opt_options) {\n        var _this = this;\n        /**\n         * @type {Options}\n         */\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            opaque: false,\n            projection: options.projection,\n            tileGrid: options.tileGrid,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            zDirection: options.zDirection\n        }) || this;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    TileDebug.prototype.getTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n        }\n        else {\n            var tileSize = toSize(this.tileGrid.getTileSize(z));\n            var tileCoord = [z, x, y];\n            var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n            var text = void 0;\n            if (textTileCoord) {\n                text = 'z:' + textTileCoord[0] + ' x:' + textTileCoord[1] + ' y:' + textTileCoord[2];\n            }\n            else {\n                text = 'none';\n            }\n            var tile = new LabeledTile(tileCoord, tileSize, text);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    return TileDebug;\n}(XYZ));\nexport default TileDebug;\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * See https://mapbox.com/developers/api/.\n */\nimport { createFromTemplates } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /** @class */ (function (_super) {\n    __extends(TileJSON, _super);\n    /**\n     * @param {Options} options TileJSON options.\n     */\n    function TileJSON(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @type {Config}\n         * @private\n         */\n        _this.tileJSON_ = null;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         * @private\n         */\n        _this.tileSize_ = options.tileSize;\n        if (options.url) {\n            if (options.jsonp) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    TileJSON.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {TileJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    TileJSON.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * @return {Config} The tilejson object.\n     * @api\n     */\n    TileJSON.prototype.getTileJSON = function () {\n        return this.tileJSON_;\n    };\n    /**\n     * @protected\n     * @param {Config} tileJSON Tile JSON.\n     */\n    TileJSON.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom,\n            tileSize: this.tileSize_\n        });\n        this.tileGrid = tileGrid;\n        this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n        if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.tileJSON_ = tileJSON;\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @protected\n     */\n    TileJSON.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    return TileJSON;\n}(TileImage));\nexport default TileJSON;\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport { assert } from '../asserts.js';\nimport { buffer, createEmpty } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { modulo } from '../math.js';\nimport { get as getProjection, transform, transformExtent } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { toSize, buffer as bufferSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /** @class */ (function (_super) {\n    __extends(TileWMS, _super);\n    /**\n     * @param {Options=} [opt_options] Tile WMS options.\n     */\n    function TileWMS(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : /** @type {Options} */ ({});\n        var params = options.params || {};\n        var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: !transparent,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = params;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.updateV13_();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    TileWMS.prototype.getFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projectionObj);\n        }\n        var z = tileGrid.getZForResolution(resolution, this.zDirection);\n        var tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n            tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n        var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Return the GetLegendGraphic URL, optionally optimized for the passed\n     * resolution and possibly including any passed specific parameters. Returns\n     * `undefined` if the GetLegendGraphic URL cannot be constructed.\n     *\n     * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n     *     will not be calculated and included in URL.\n     * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n     *     request is generated for this wms layer, else it will try to use the\n     *     configured wms layer. Default `FORMAT` is `image/png`.\n     *     `VERSION` should not be specified here.\n     * @return {string|undefined} GetLegendGraphic URL.\n     * @api\n     */\n    TileWMS.prototype.getLegendUrl = function (resolution, params) {\n        if (this.urls[0] === undefined) {\n            return undefined;\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetLegendGraphic',\n            'FORMAT': 'image/png'\n        };\n        if (params === undefined || params['LAYER'] === undefined) {\n            var layers = this.params_.LAYERS;\n            var isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n            if (!isSingleLayer) {\n                return undefined;\n            }\n            baseParams['LAYER'] = layers;\n        }\n        if (resolution !== undefined) {\n            var mpu = this.getProjection() ? this.getProjection().getMetersPerUnit() : 1;\n            var dpi = 25.4 / 0.28;\n            var inchesPerMeter = 39.37;\n            baseParams['SCALE'] = resolution * mpu * inchesPerMeter * dpi;\n        }\n        assign(baseParams, params);\n        return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileWMS.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        params['WIDTH'] = tileSize[0];\n        params['HEIGHT'] = tileSize[1];\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 52); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox = tileExtent;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            var tmp = void 0;\n            tmp = tileExtent[0];\n            bbox[0] = tileExtent[1];\n            bbox[1] = tmp;\n            tmp = tileExtent[2];\n            bbox[2] = tileExtent[3];\n            bbox[3] = tmp;\n        }\n        params['BBOX'] = bbox.join(',');\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        return appendParams(url, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getTilePixelRatio = function (pixelRatio) {\n        return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n            /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileWMS.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.setKey(this.getKeyForParams_());\n    };\n    /**\n     * @private\n     */\n    TileWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return TileWMS;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n        pixelRatio = 1;\n    }\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n        tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n        tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    var baseParams = {\n        'SERVICE': 'WMS',\n        'VERSION': DEFAULT_WMS_VERSION,\n        'REQUEST': 'GetMap',\n        'FORMAT': 'image/png',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileWMS;\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { listenOnce } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n     * @param {boolean} preemptive Load the tile when visible (before it's needed).\n     * @param {boolean} jsonp Load the tile as a script.\n     */\n    function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n        var _this = _super.call(this, tileCoord, state) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = preemptive;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.grid_ = null;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.keys_ = null;\n        /**\n         * @private\n         * @type {Object<string, Object>|undefined}\n         */\n        _this.data_ = null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = jsonp;\n        return _this;\n    }\n    /**\n     * Get the image element for this tile.\n     * @return {HTMLImageElement} Image.\n     */\n    CustomTile.prototype.getImage = function () {\n        return null;\n    };\n    /**\n     * Synchronously returns data at given coordinate (if available).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {*} The data.\n     */\n    CustomTile.prototype.getData = function (coordinate) {\n        if (!this.grid_ || !this.keys_) {\n            return null;\n        }\n        var xRelative = (coordinate[0] - this.extent_[0]) /\n            (this.extent_[2] - this.extent_[0]);\n        var yRelative = (coordinate[1] - this.extent_[1]) /\n            (this.extent_[3] - this.extent_[1]);\n        var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n        if (typeof row !== 'string') {\n            return null;\n        }\n        var code = row.charCodeAt(Math.floor(xRelative * row.length));\n        if (code >= 93) {\n            code--;\n        }\n        if (code >= 35) {\n            code--;\n        }\n        code -= 32;\n        var data = null;\n        if (code in this.keys_) {\n            var id = this.keys_[code];\n            if (this.data_ && id in this.data_) {\n                data = this.data_[id];\n            }\n            else {\n                data = id;\n            }\n        }\n        return data;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate (or `null` if not yet loaded).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     */\n    CustomTile.prototype.forDataAtCoordinate = function (coordinate, callback, opt_request) {\n        if (this.state == TileState.EMPTY && opt_request === true) {\n            this.state = TileState.IDLE;\n            listenOnce(this, EventType.CHANGE, function (e) {\n                callback(this.getData(coordinate));\n            }, this);\n            this.loadInternal_();\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(this.getData(coordinate));\n                }.bind(this), 0);\n            }\n            else {\n                callback(this.getData(coordinate));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.handleError_ = function () {\n        this.state = TileState.ERROR;\n        this.changed();\n    };\n    /**\n     * @param {!UTFGridJSON} json UTFGrid data.\n     * @private\n     */\n    CustomTile.prototype.handleLoad_ = function (json) {\n        this.grid_ = json['grid'];\n        this.keys_ = json['keys'];\n        this.data_ = json['data'];\n        this.state = TileState.LOADED;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.loadInternal_ = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            if (this.jsonp_) {\n                requestJSONP(this.src_, this.handleLoad_.bind(this), this.handleError_.bind(this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', this.onXHRLoad_.bind(this));\n                client.addEventListener('error', this.onXHRError_.bind(this));\n                client.open('GET', this.src_);\n                client.send();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    CustomTile.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {!UTFGridJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleError_();\n                return;\n            }\n            this.handleLoad_(response);\n        }\n        else {\n            this.handleError_();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    CustomTile.prototype.onXHRError_ = function (event) {\n        this.handleError_();\n    };\n    /**\n     * @override\n     */\n    CustomTile.prototype.load = function () {\n        if (this.preemptive_) {\n            this.loadInternal_();\n        }\n        else {\n            this.setState(TileState.EMPTY);\n        }\n    };\n    return CustomTile;\n}(Tile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false` (lazy loading), you need to pass `true` as\n * `opt_request` to the `forDataAtCoordinateAndResolution` method otherwise no\n * data will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = /** @class */ (function (_super) {\n    __extends(UTFGrid, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function UTFGrid(options) {\n        var _this = _super.call(this, {\n            projection: getProjection('EPSG:3857'),\n            state: SourceState.LOADING\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = options.preemptive !== undefined ?\n            options.preemptive : true;\n        /**\n         * @private\n         * @type {!import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction_ = nullTileUrlFunction;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.template_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = options.jsonp || false;\n        if (options.url) {\n            if (_this.jsonp_) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    UTFGrid.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {import(\"./TileJSON.js\").Config} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    UTFGrid.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * Return the template from TileJSON.\n     * @return {string|undefined} The template from TileJSON.\n     * @api\n     */\n    UTFGrid.prototype.getTemplate = function () {\n        return this.template_;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate and resolution (or `null` if not yet loaded or\n     * in case of an error).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     * @api\n     */\n    UTFGrid.prototype.forDataAtCoordinateAndResolution = function (coordinate, resolution, callback, opt_request) {\n        if (this.tileGrid) {\n            var z = this.tileGrid.getZForResolution(resolution, this.zDirection);\n            var tileCoord = this.tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n            var tile = /** @type {!CustomTile} */ (this.getTile(tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n            tile.forDataAtCoordinate(coordinate, callback, opt_request);\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(null);\n                }, 0);\n            }\n            else {\n                callback(null);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    UTFGrid.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n     * @protected\n     * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n     */\n    UTFGrid.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom\n        });\n        this.tileGrid = tileGrid;\n        this.template_ = tileJSON['template'];\n        var grids = tileJSON['grids'];\n        if (!grids) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n        if (tileJSON['attribution'] !== undefined) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n            var tile = new CustomTile(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.tileGrid.getTileCoordExtent(tileCoord), this.preemptive_, this.jsonp_);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UTFGrid;\n}(TileSource));\nexport default UTFGrid;\n//# sourceMappingURL=UTFGrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorRenderTile\n */\nimport { getUid } from './util.js';\nimport Tile from './Tile.js';\nimport { createCanvasContext2D } from './dom.js';\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedResolution\n * @property {number} renderedRevision\n * @property {number} renderedZ\n * @property {number} renderedTileResolution\n * @property {number} renderedTileZ\n */\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nvar canvasPool = [];\nvar VectorRenderTile = /** @class */ (function (_super) {\n    __extends(VectorRenderTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n     * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n     * to get source tiles for this tile.\n     */\n    function VectorRenderTile(tileCoord, state, urlTileCoord, getSourceTiles) {\n        var _this = _super.call(this, tileCoord, state, { transition: 0 }) || this;\n        /**\n         * @private\n         * @type {!Object<string, CanvasRenderingContext2D>}\n         */\n        _this.context_ = {};\n        /**\n         * Executor groups by layer uid. Entries are read/written by the renderer.\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n         */\n        _this.executorGroups = {};\n        /**\n         * Number of loading source tiles. Read/written by the source.\n         * @type {number}\n         */\n        _this.loadingSourceTiles = 0;\n        /**\n         * Tile keys of error source tiles. Read/written by the source.\n         * @type {Object<string, boolean>}\n         */\n        _this.errorSourceTileKeys = {};\n        /**\n         * @type {Object<number, ImageData>}\n         */\n        _this.hitDetectionImageData = {};\n        /**\n         * @private\n         * @type {!Object<string, ReplayState>}\n         */\n        _this.replayState_ = {};\n        /**\n         * @type {Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.sourceTiles = null;\n        /**\n         * @type {number}\n         */\n        _this.wantedResolution;\n        /**\n         * @type {!function():Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.getSourceTiles = getSourceTiles.bind(undefined, _this);\n        /**\n         * z of the source tiles of the last getSourceTiles call.\n         * @type {number}\n         */\n        _this.sourceZ = -1;\n        /**\n         * True when all tiles for this tile's nominal resolution are available.\n         * @type {boolean}\n         */\n        _this.hifi = false;\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord = urlTileCoord;\n        return _this;\n    }\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {CanvasRenderingContext2D} The rendering context.\n     */\n    VectorRenderTile.prototype.getContext = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.context_)) {\n            this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n        }\n        return this.context_[key];\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {boolean} Tile has a rendering context for the given layer.\n     */\n    VectorRenderTile.prototype.hasContext = function (layer) {\n        return getUid(layer) in this.context_;\n    };\n    /**\n     * Get the Canvas for this tile.\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    VectorRenderTile.prototype.getImage = function (layer) {\n        return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {ReplayState} The replay state.\n     */\n    VectorRenderTile.prototype.getReplayState = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.replayState_)) {\n            this.replayState_[key] = {\n                dirty: false,\n                renderedRenderOrder: null,\n                renderedResolution: NaN,\n                renderedRevision: -1,\n                renderedTileResolution: NaN,\n                renderedTileRevision: -1,\n                renderedZ: -1,\n                renderedTileZ: -1\n            };\n        }\n        return this.replayState_[key];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.load = function () {\n        this.getSourceTiles();\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.release = function () {\n        for (var key in this.context_) {\n            canvasPool.push(this.context_[key].canvas);\n        }\n        _super.prototype.release.call(this);\n    };\n    return VectorRenderTile;\n}(Tile));\nexport default VectorRenderTile;\n//# sourceMappingURL=VectorRenderTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Data source url.\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * Extent of this tile; set by the source.\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = null;\n        /**\n         * @private\n         * @type {import(\"./format/Feature.js\").default}\n         */\n        _this.format_ = format;\n        /**\n         * @private\n         * @type {Array<import(\"./Feature.js\").default>}\n         */\n        _this.features_ = null;\n        /**\n         * @private\n         * @type {import(\"./featureloader.js\").FeatureLoader}\n         */\n        _this.loader_;\n        /**\n         * Feature projection of this tile; set by the source.\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection = null;\n        /**\n         * Resolution of this tile; set by the source.\n         * @type {number}\n         */\n        _this.resolution;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = src;\n        return _this;\n    }\n    /**\n     * Get the feature format assigned for reading this tile's features.\n     * @return {import(\"./format/Feature.js\").default} Feature format.\n     * @api\n     */\n    VectorTile.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Get the features for this tile. Geometries will be in the view projection.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    VectorTile.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getKey = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.setState(TileState.LOADING);\n            this.tileLoadFunction_(this, this.url_);\n            if (this.loader_) {\n                this.loader_(this.extent, this.resolution, this.projection);\n            }\n        }\n    };\n    /**\n     * Handler for successful tile load.\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n     */\n    VectorTile.prototype.onLoad = function (features, dataProjection) {\n        this.setFeatures(features);\n    };\n    /**\n     * Handler for tile load errors.\n     */\n    VectorTile.prototype.onError = function () {\n        this.setState(TileState.ERROR);\n    };\n    /**\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n     * Sets the features for the tile.\n     * @param {Array<import(\"./Feature.js\").default>} features Features.\n     * @api\n     */\n    VectorTile.prototype.setFeatures = function (features) {\n        this.features_ = features;\n        this.setState(TileState.LOADED);\n    };\n    /**\n     * Set the feature loader for reading this tile's features.\n     * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n     * @api\n     */\n    VectorTile.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    return VectorTile;\n}(Tile));\nexport default VectorTile;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport { toSize } from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport { getKeyZXY, fromKey } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection, createForProjection } from '../tilegrid.js';\nimport { buffer as bufferExtent, getIntersection, intersects } from '../extent.js';\nimport EventType from '../events/EventType.js';\nimport { loadFeaturesXhr } from '../featureloader.js';\nimport { equals } from '../array.js';\nimport TileCache from '../TileCache.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number} [zDirection=1] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {!Options} options Vector tile options.\n     */\n    function VectorTile(options) {\n        var _this = this;\n        var projection = options.projection || 'EPSG:3857';\n        var extent = options.extent || extentFromProjection(projection);\n        var tileGrid = options.tileGrid || createXYZ({\n            extent: extent,\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize || 512\n        });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            opaque: false,\n            projection: projection,\n            state: options.state,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX === undefined ? true : options.wrapX,\n            transition: options.transition,\n            zDirection: options.zDirection === undefined ? 1 : options.zDirection\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default}\n         */\n        _this.format_ = options.format ? options.format : null;\n        /**\n         * @type {Object<string, import(\"./VectorTile\").default>}\n         */\n        _this.loadingTiles_ = {};\n        /**\n         * @private\n         * @type {TileCache}\n         */\n        _this.sourceTileCache = new TileCache(_this.tileCache.highWaterMark);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @protected\n         * @type {typeof import(\"../VectorTile.js\").default}\n         */\n        _this.tileClass = options.tileClass ? options.tileClass : Tile;\n        /**\n         * @private\n         * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGrids_ = {};\n        return _this;\n    }\n    /**\n     * Get features whose bounding box intersects the provided extent. Only features for cached\n     * tiles for the last rendered zoom level are available in the source. So this method is only\n     * suitable for requesting tiles for extents that are currently rendered.\n     *\n     * Features are returned in random tile order and as they are included in the tiles. This means\n     * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    VectorTile.prototype.getFeaturesInExtent = function (extent) {\n        var features = [];\n        var tileCache = this.tileCache;\n        if (tileCache.getCount() === 0) {\n            return features;\n        }\n        var z = fromKey(tileCache.peekFirstKey())[0];\n        var tileGrid = this.tileGrid;\n        tileCache.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n                return;\n            }\n            var sourceTiles = tile.getSourceTiles();\n            for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n                var sourceTile = sourceTiles[i];\n                var tileCoord = sourceTile.tileCoord;\n                if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n                    var tileFeatures = sourceTile.getFeatures();\n                    if (tileFeatures) {\n                        for (var j = 0, jj = tileFeatures.length; j < jj; ++j) {\n                            var candidate = tileFeatures[j];\n                            var geometry = candidate.getGeometry();\n                            if (intersects(extent, geometry.getExtent())) {\n                                features.push(candidate);\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        return features;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorTile.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n     * @api\n     */\n    VectorTile.prototype.clear = function () {\n        this.tileCache.clear();\n        this.sourceTileCache.clear();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    VectorTile.prototype.expireCache = function (projection, usedTiles) {\n        _super.prototype.expireCache.call(this, projection, usedTiles);\n        this.sourceTileCache.expireCache({});\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection\").default} projection Projection.\n     * @param {VectorRenderTile} tile Vector image tile.\n     * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n     */\n    VectorTile.prototype.getSourceTiles = function (pixelRatio, projection, tile) {\n        var urlTileCoord = tile.wrappedTileCoord;\n        var tileGrid = this.getTileGridForProjection(projection);\n        var extent = tileGrid.getTileCoordExtent(urlTileCoord);\n        var z = urlTileCoord[0];\n        var resolution = tileGrid.getResolution(z);\n        // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n        bufferExtent(extent, -resolution, extent);\n        var sourceTileGrid = this.tileGrid;\n        var sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n            getIntersection(extent, sourceExtent, extent);\n        }\n        var sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n        var minZoom = sourceTileGrid.getMinZoom();\n        var previousSourceTiles = tile.sourceTiles;\n        var sourceTiles, covered, loadedZ;\n        if (previousSourceTiles && previousSourceTiles.length > 0 && previousSourceTiles[0].tileCoord[0] === sourceZ) {\n            sourceTiles = previousSourceTiles;\n            covered = true;\n            loadedZ = sourceZ;\n        }\n        else {\n            sourceTiles = [];\n            loadedZ = sourceZ + 1;\n            do {\n                --loadedZ;\n                covered = true;\n                sourceTileGrid.forEachTileCoord(extent, loadedZ, function (sourceTileCoord) {\n                    var tileUrl = this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n                    var sourceTile;\n                    if (tileUrl !== undefined) {\n                        if (this.sourceTileCache.containsKey(tileUrl)) {\n                            sourceTile = this.sourceTileCache.get(tileUrl);\n                            var state = sourceTile.getState();\n                            if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n                                sourceTiles.push(sourceTile);\n                                return;\n                            }\n                        }\n                        else if (loadedZ === sourceZ) {\n                            sourceTile = new this.tileClass(sourceTileCoord, TileState.IDLE, tileUrl, this.format_, this.tileLoadFunction);\n                            sourceTile.extent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n                            sourceTile.projection = projection;\n                            sourceTile.resolution = sourceTileGrid.getResolution(sourceTileCoord[0]);\n                            this.sourceTileCache.set(tileUrl, sourceTile);\n                            sourceTile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n                            sourceTile.load();\n                        }\n                    }\n                    covered = covered && sourceTile && sourceTile.getState() === TileState.LOADED;\n                    if (!sourceTile) {\n                        return;\n                    }\n                    if (sourceTile.getState() !== TileState.EMPTY && tile.getState() === TileState.IDLE) {\n                        tile.loadingSourceTiles++;\n                        sourceTile.addEventListener(EventType.CHANGE, function listenChange() {\n                            var state = sourceTile.getState();\n                            var sourceTileKey = sourceTile.getKey();\n                            if (state === TileState.LOADED || state === TileState.ERROR) {\n                                if (state === TileState.LOADED) {\n                                    sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n                                    tile.loadingSourceTiles--;\n                                    delete tile.errorSourceTileKeys[sourceTileKey];\n                                }\n                                else if (state === TileState.ERROR) {\n                                    tile.errorSourceTileKeys[sourceTileKey] = true;\n                                }\n                                var errorTileCount = Object.keys(tile.errorSourceTileKeys).length;\n                                if (tile.loadingSourceTiles - errorTileCount === 0) {\n                                    tile.hifi = errorTileCount === 0;\n                                    tile.sourceZ = sourceZ;\n                                    tile.setState(TileState.LOADED);\n                                }\n                            }\n                        });\n                    }\n                }.bind(this));\n                if (!covered) {\n                    sourceTiles.length = 0;\n                }\n            } while (!covered && loadedZ > minZoom);\n        }\n        if (tile.getState() === TileState.IDLE) {\n            tile.setState(TileState.LOADING);\n        }\n        if (covered) {\n            tile.hifi = sourceZ === loadedZ;\n            tile.sourceZ = loadedZ;\n            if (tile.getState() < TileState.LOADED) {\n                tile.setState(TileState.LOADED);\n            }\n            else if (!previousSourceTiles || !equals(sourceTiles, previousSourceTiles)) {\n                tile.sourceTiles = sourceTiles;\n            }\n        }\n        return sourceTiles;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var coordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        var tile;\n        if (this.tileCache.containsKey(coordKey)) {\n            tile = /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(coordKey));\n            if (tile.key === key) {\n                return tile;\n            }\n        }\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var sourceExtent = this.getTileGrid().getExtent();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (urlTileCoord && sourceExtent) {\n            var tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n            // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n            bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n            if (!intersects(sourceExtent, tileExtent)) {\n                urlTileCoord = null;\n            }\n        }\n        var empty = true;\n        if (urlTileCoord !== null) {\n            var sourceTileGrid = this.tileGrid;\n            var resolution = tileGrid.getResolution(z);\n            var sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n            // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n            var extent = tileGrid.getTileCoordExtent(urlTileCoord);\n            bufferExtent(extent, -resolution, extent);\n            sourceTileGrid.forEachTileCoord(extent, sourceZ, function (sourceTileCoord) {\n                empty = empty && !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            }.bind(this));\n        }\n        var newTile = new VectorRenderTile(tileCoord, empty ? TileState.EMPTY : TileState.IDLE, urlTileCoord, this.getSourceTiles.bind(this, pixelRatio, projection));\n        newTile.key = key;\n        if (tile) {\n            newTile.interimTile = tile;\n            newTile.refreshInterimChain();\n            this.tileCache.replace(coordKey, newTile);\n        }\n        else {\n            this.tileCache.set(coordKey, newTile);\n        }\n        return newTile;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTileGridForProjection = function (projection) {\n        var code = projection.getCode();\n        var tileGrid = this.tileGrids_[code];\n        if (!tileGrid) {\n            // A tile grid that matches the tile size of the source tile grid is more\n            // likely to have 1:1 relationships between source tiles and rendered tiles.\n            var sourceTileGrid = this.tileGrid;\n            tileGrid = createForProjection(projection, undefined, sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n            this.tileGrids_[code] = tileGrid;\n        }\n        return tileGrid;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n    };\n    return VectorTile;\n}(UrlTile));\nexport default VectorTile;\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n    var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n    tile.setLoader(loader);\n}\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n    KVP: 'KVP',\n    REST: 'REST' // see spec §10\n};\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/tilegrid/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { find } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport TileGrid from './TileGrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /** @class */ (function (_super) {\n    __extends(WMTSTileGrid, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTSTileGrid(options) {\n        var _this = _super.call(this, {\n            extent: options.extent,\n            origin: options.origin,\n            origins: options.origins,\n            resolutions: options.resolutions,\n            tileSize: options.tileSize,\n            tileSizes: options.tileSizes,\n            sizes: options.sizes\n        }) || this;\n        /**\n         * @private\n         * @type {!Array<string>}\n         */\n        _this.matrixIds_ = options.matrixIds;\n        return _this;\n    }\n    /**\n     * @param {number} z Z.\n     * @return {string} MatrixId..\n     */\n    WMTSTileGrid.prototype.getMatrixId = function (z) {\n        return this.matrixIds_[z];\n    };\n    /**\n     * Get the list of matrix identifiers.\n     * @return {Array<string>} MatrixIds.\n     * @api\n     */\n    WMTSTileGrid.prototype.getMatrixIds = function () {\n        return this.matrixIds_;\n    };\n    return WMTSTileGrid;\n}(TileGrid));\nexport default WMTSTileGrid;\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n    /** @type {!Array<number>} */\n    var resolutions = [];\n    /** @type {!Array<string>} */\n    var matrixIds = [];\n    /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n    var origins = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var tileSizes = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var sizes = [];\n    var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n    var supportedCRSPropName = 'SupportedCRS';\n    var matrixIdsPropName = 'TileMatrix';\n    var identifierPropName = 'Identifier';\n    var scaleDenominatorPropName = 'ScaleDenominator';\n    var topLeftCornerPropName = 'TopLeftCorner';\n    var tileWidthPropName = 'TileWidth';\n    var tileHeightPropName = 'TileHeight';\n    var code = matrixSet[supportedCRSPropName];\n    var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n    var metersPerUnit = projection.getMetersPerUnit();\n    // swap origin x and y coordinates if axis orientation is lat/long\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    matrixSet[matrixIdsPropName].sort(function (a, b) {\n        return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n    });\n    matrixSet[matrixIdsPropName].forEach(function (elt) {\n        var matrixAvailable;\n        // use of matrixLimits to filter TileMatrices from GetCapabilities\n        // TileMatrixSet from unavailable matrix levels.\n        if (matrixLimits.length > 0) {\n            matrixAvailable = find(matrixLimits, function (elt_ml) {\n                if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n                    return true;\n                }\n                // Fallback for tileMatrix identifiers that don't get prefixed\n                // by their tileMatrixSet identifiers.\n                if (elt[identifierPropName].indexOf(':') === -1) {\n                    return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n                }\n                return false;\n            });\n        }\n        else {\n            matrixAvailable = true;\n        }\n        if (matrixAvailable) {\n            matrixIds.push(elt[identifierPropName]);\n            var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n            var tileWidth = elt[tileWidthPropName];\n            var tileHeight = elt[tileHeightPropName];\n            if (switchOriginXY) {\n                origins.push([elt[topLeftCornerPropName][1],\n                    elt[topLeftCornerPropName][0]]);\n            }\n            else {\n                origins.push(elt[topLeftCornerPropName]);\n            }\n            resolutions.push(resolution);\n            tileSizes.push(tileWidth == tileHeight ?\n                tileWidth : [tileWidth, tileHeight]);\n            sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n        }\n    });\n    return new WMTSTileGrid({\n        extent: opt_extent,\n        origins: origins,\n        resolutions: resolutions,\n        matrixIds: matrixIds,\n        tileSizes: tileSizes,\n        sizes: sizes\n    });\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { expandUrl, createFromTileUrlFunctions, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { find, findIndex, includes } from '../array.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, equivalent } from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will be ignored if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        // TODO: add support for TileMatrixLimits\n        var _this = this;\n        var requestEncoding = options.requestEncoding !== undefined ?\n            /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n            WMTSRequestEncoding.KVP;\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: nullTileUrlFunction,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @override\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                    getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = /** @type {string} */ (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = /** @type {Array<Object>} */ (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n            getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wrapX = false;\n    var matrix0 = matrixSetObj.TileMatrix[0];\n    var resolution = matrix0.ScaleDenominator * 0.00028; // WMTS 1.0.0: standardized rendering pixel size\n    var origin = projection === getProjection('EPSG:4326')\n        ? [matrix0.TopLeftCorner[1], matrix0.TopLeftCorner[0]]\n        : matrix0.TopLeftCorner;\n    var tileSpanX = matrix0.TileWidth * resolution;\n    var tileSpanY = matrix0.TileHeight * resolution;\n    var extent = [\n        origin[0],\n        origin[1] - tileSpanY * matrix0.MatrixHeight,\n        origin[0] + tileSpanX * matrix0.MatrixWidth,\n        origin[1]\n    ];\n    if (projection.getExtent() === null) {\n        projection.setExtent(extent);\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = WMTSRequestEncoding.KVP;\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = WMTSRequestEncoding.REST;\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin']\n    };\n}\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n    var requestEncoding = this.requestEncoding_;\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    var context = {\n        'layer': this.layer_,\n        'style': this.style_,\n        'tilematrixset': this.matrixSet_\n    };\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n        assign(context, {\n            'Service': 'WMTS',\n            'Request': 'GetTile',\n            'Version': this.version_,\n            'Format': this.format_\n        });\n    }\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n        appendParams(template, context) :\n        template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n        });\n    var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n    var dimensions = this.dimensions_;\n    return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var localContext_1 = {\n                'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                'TileCol': tileCoord[1],\n                'TileRow': tileCoord[2]\n            };\n            assign(localContext_1, dimensions);\n            var url = template;\n            if (requestEncoding == WMTSRequestEncoding.KVP) {\n                url = appendParams(url, localContext_1);\n            }\n            else {\n                url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return localContext_1[p];\n                });\n            }\n            return url;\n        }\n    });\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map"],"sourceRoot":""}